{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      //对话框属性\n      activeName: '0',\n      //默认打开序号\n      topicCount: [],\n      //每种类型题目的总数\n      score: [],\n      //每种类型分数的总数\n      examData: {//考试信息\n        // source: null,\n        // totalScore: null,\n      },\n      topic: {//试卷信息\n      }\n    };\n  },\n\n  mounted() {\n    this.init();\n  },\n\n  methods: {\n    //初始化页面数据\n    init() {\n      let examCode = this.$route.query.examCode; //获取路由传递过来的试卷编号\n\n      request.get(\"/exam/\" + examCode).then(res => {\n        //通过examCode请求试卷详细信息\n        // res.data.data.examDate = res.data.data.examDate.substr(0,10)\n        console.log(res.data);\n        this.examData = res.data;\n        let paperId = this.examData.paperId;\n        request.get(\"/paperManage\", {\n          params: {\n            // pageNum:this.currentPage4,\n            // pageSize:this.pageSize4,\n            // search:this.search,\n            paperId: paperId\n          }\n        }).then(res => {\n          //通过paperId获取试题题目信息\n          console.log(res.data);\n          this.topic = { ...res.data\n          };\n          let keys = Object.keys(this.topic); //对象转数组\n\n          keys.forEach(e => {\n            let data = this.topic[e];\n            this.topicCount.push(data.length);\n            let currentScore = 0;\n\n            for (let i = 0; i < data.length; i++) {\n              //循环每种题型,计算出总分\n              currentScore += data[i].score;\n            }\n\n            this.score.push(currentScore); //把每种题型总分存入score\n          });\n        });\n      });\n    },\n\n    toAnswer(id) {\n      this.$router.push({\n        path: \"/answer\",\n        query: {\n          examCode: id\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuFA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,mBAAa,EAAE,KADV;AACiB;AACtBC,gBAAU,EAAE,GAFP;AAEa;AAClBC,gBAAU,EAAE,EAHP;AAGU;AACfC,WAAK,EAAE,EAJF;AAIO;AACZC,cAAQ,EAAE,CAAE;AACV;AACA;AAFQ,OALL;AASLC,WAAK,EAAE,CAAG;AAAH;AATF,KAAP;AAaD,GAfY;;AAgBbC,SAAO,GAAG;AACR,SAAKC,IAAL;AACD,GAlBY;;AAmBbC,SAAO,EAAE;AACP;AACAD,QAAI,GAAG;AACL,UAAIE,QAAO,GAAI,KAAKC,MAAL,CAAYC,KAAZ,CAAkBF,QAAjC,CADK,CACqC;;AAC1CX,aAAO,CAACc,GAAR,CAAY,WAASH,QAArB,EAA+BI,IAA/B,CAAoCC,GAAE,IAAK;AAAG;AAC5C;AACAC,eAAO,CAACC,GAAR,CAAYF,GAAG,CAACf,IAAhB;AACA,aAAKK,QAAL,GAAgBU,GAAG,CAACf,IAApB;AACA,YAAIkB,OAAM,GAAI,KAAKb,QAAL,CAAca,OAA5B;AACDnB,eAAO,CAACc,GAAR,CAAY,cAAZ,EAA2B;AACzBM,gBAAM,EAAC;AACL;AACA;AACA;AACAD,mBAAO,EAACA;AAJH;AADkB,SAA3B,EAOIJ,IAPJ,CAOSC,GAAE,IAAK;AAAG;AACjBC,iBAAO,CAACC,GAAR,CAAYF,GAAG,CAACf,IAAhB;AACA,eAAKM,KAAL,GAAa,EAAC,GAAGS,GAAG,CAACf;AAAR,WAAb;AACC,cAAIoB,IAAG,GAAIC,MAAM,CAACD,IAAP,CAAY,KAAKd,KAAjB,CAAX,CAHa,CAGsB;;AACnCc,cAAI,CAACE,OAAL,CAAaC,KAAK;AAChB,gBAAIvB,IAAG,GAAI,KAAKM,KAAL,CAAWiB,CAAX,CAAX;AACA,iBAAKpB,UAAL,CAAgBqB,IAAhB,CAAqBxB,IAAI,CAACyB,MAA1B;AACA,gBAAIC,YAAW,GAAI,CAAnB;;AACA,iBAAI,IAAIC,IAAI,CAAZ,EAAeA,CAAC,GAAE3B,IAAI,CAACyB,MAAvB,EAA+BE,CAAC,EAAhC,EAAoC;AAAE;AACpCD,0BAAW,IAAK1B,IAAI,CAAC2B,CAAD,CAAJ,CAAQvB,KAAxB;AACF;;AACA,iBAAKA,KAAL,CAAWoB,IAAX,CAAgBE,YAAhB,EAPgB,CAOc;AAC/B,WARD;AASD,SApBF;AAqBA,OA1BD;AA2BD,KA/BM;;AAgCPE,YAAQ,CAACC,EAAD,EAAK;AACX,WAAKC,OAAL,CAAaN,IAAb,CAAkB;AAACO,YAAI,EAAC,SAAN;AAAgBnB,aAAK,EAAC;AAACF,kBAAQ,EAAEmB;AAAX;AAAtB,OAAlB;AACD;;AAlCM;AAnBI,CAAf","names":["request","data","dialogVisible","activeName","topicCount","score","examData","topic","mounted","init","methods","examCode","$route","query","get","then","res","console","log","paperId","params","keys","Object","forEach","e","push","length","currentScore","i","toAnswer","id","$router","path"],"sourceRoot":"","sources":["F:\\21-22-2\\大三短学期\\大作业\\Spring-Vue-Exam-Pure-main\\Spring-Vue-Exam-Pure-main\\vue\\src\\components\\student\\examMsg.vue"],"sourcesContent":["// 点击试卷后的缩略信息\r\n<template>\r\n  <div v-wechat-title=\"$route.meta.title\" id=\"msg\">\r\n    <div class=\"title\">\r\n      <span>试卷列表</span>\r\n      <span> /  {{examData.source}}</span>\r\n    </div>\r\n    <div class=\"wrapper\">\r\n      <ul class=\"top\">\r\n        <li class=\"example\">{{examData.source}}</li>\r\n        <li><i class=\"iconfont icon-pen-\"></i></li>\r\n        <li><i class=\"iconfont icon-share\"></i></li>\r\n        <li class=\"right\">\r\n          <div>\r\n            <span class=\"count\">总分</span>\r\n            <span class=\"score\">{{score[0]+score[1]+score[2]}}</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"bottom\">\r\n        <li>更新于{{examData.examDate}}</li>\r\n        <li>来自 {{examData.institute}}</li>\r\n        <li class=\"btn\">{{examData.type}}</li>\r\n        <li class=\"right\"><el-button @click=\"toAnswer(examData.examCode)\">开始答题</el-button></li>\r\n      </ul>\r\n      <ul class=\"info\">\r\n        <el-button @click=\"dialogVisible = true\"><i class=\"iconfont icon-info\"></i>考生须知</el-button>\r\n      </ul>\r\n    </div>\r\n    <div class=\"content\">\r\n      <el-collapse v-model=\"activeName\" >\r\n        <el-collapse-item class=\"header\" name=\"0\">\r\n          <template #title>\r\n            <span>{{examData.source}}</span><i class=\"header-icon el-icon-info\"></i>\r\n            <span class=\"time\">{{examData.totalScore}}分 / {{examData.totalTime}}分钟</span>\r\n            <el-button type=\"primary\" size=\"small\" style=\"margin-left: 600px\">点击查看试题详情</el-button>\r\n          </template>\r\n          <el-collapse class=\"inner\">\r\n            <el-collapse-item>\r\n              <template #title name=\"1\">\r\n                <div class=\"titlei\">选择题 (共{{topicCount[0]}}题 共计{{score[0]}}分)</div>\r\n              </template>\r\n              <div class=\"contenti\">\r\n                <ul class=\"question\" v-for=\"(list, index) in topic[1]\" :key=\"index\">\r\n                  <li>{{index+1}}. {{list.question}} {{list.score}}分</li>\r\n                </ul>\r\n              </div>\r\n            </el-collapse-item>\r\n            <el-collapse-item>\r\n              <template #title name=\"2\">\r\n                <div class=\"titlei\">填空题 (共{{topicCount[1]}}题  共计{{score[1]}}分)</div>\r\n              </template>\r\n              <div class=\"contenti\">\r\n                <ul class=\"question\" v-for=\"(list, index) in topic[2]\" :key=\"index\">\r\n                  <li>{{topicCount[0]+index+1}}.{{list.question}}  {{list.score}}分</li>\r\n                </ul>\r\n              </div>\r\n            </el-collapse-item>\r\n            <el-collapse-item>\r\n              <template #title name=\"3\">\r\n                <div class=\"titlei\">判断题 (共{{topicCount[2]}}题 共计{{score[2]}}分)</div>\r\n              </template>\r\n              <div class=\"contenti\">\r\n                <ul class=\"question\" v-for=\"(list, index) in topic[3]\" :key=\"index\">\r\n                  <li>{{topicCount[0]+topicCount[1]+index+1}}. {{list.question}} {{list.score}}分</li>\r\n                </ul>\r\n              </div>\r\n            </el-collapse-item>\r\n          </el-collapse>\r\n        </el-collapse-item>\r\n\r\n      </el-collapse>\r\n    </div>\r\n    <!--考生须知对话框-->\r\n    <el-dialog\r\n        title=\"考生须知\"\r\n        v-model=\"dialogVisible\"\r\n        width=\"20%\">\r\n      <span>{{examData.tips}}</span>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">知道了</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialogVisible: false, //对话框属性\r\n      activeName: '0',  //默认打开序号\r\n      topicCount: [],//每种类型题目的总数\r\n      score: [],  //每种类型分数的总数\r\n      examData: { //考试信息\r\n        // source: null,\r\n        // totalScore: null,\r\n      },\r\n      topic: {  //试卷信息\r\n\r\n      },\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    //初始化页面数据\r\n    init() {\r\n      let examCode = this.$route.query.examCode //获取路由传递过来的试卷编号\r\n      request.get(\"/exam/\"+examCode).then(res => {  //通过examCode请求试卷详细信息\r\n        // res.data.data.examDate = res.data.data.examDate.substr(0,10)\r\n        console.log(res.data)\r\n        this.examData = res.data\r\n        let paperId = this.examData.paperId\r\n       request.get(\"/paperManage\",{\r\n         params:{\r\n           // pageNum:this.currentPage4,\r\n           // pageSize:this.pageSize4,\r\n           // search:this.search,\r\n           paperId:paperId\r\n         }\r\n        }).then(res => {  //通过paperId获取试题题目信息\r\n         console.log(res.data)\r\n         this.topic = {...res.data}\r\n          let keys = Object.keys(this.topic) //对象转数组\r\n          keys.forEach(e => {\r\n            let data = this.topic[e]\r\n            this.topicCount.push(data.length)\r\n            let currentScore = 0\r\n            for(let i = 0; i< data.length; i++) { //循环每种题型,计算出总分\r\n              currentScore += data[i].score\r\n            }\r\n            this.score.push(currentScore) //把每种题型总分存入score\r\n          })\r\n        })\r\n      })\r\n    },\r\n    toAnswer(id) {\r\n      this.$router.push({path:\"/answer\",query:{examCode: id}})\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.bottom {\r\n  .right{\r\n    .el-button{\r\n      color: #409EFF;\r\n      border-color: #c6e2ff;\r\n      background-color: #ecf5ff;\r\n    }\r\n  }\r\n}\r\n.right {\r\n  margin-left: auto;\r\n}\r\n.inner .contenti .question {\r\n  margin-left: 40px;\r\n  color: #9a9a9a;\r\n  font-size: 14px;\r\n}\r\n.content .inner .titlei {\r\n  margin-left: 20px;\r\n  font-size: 16px;\r\n  color: #88949b;\r\n  font-weight: bold;\r\n}\r\n.content .title .time {\r\n  font-size: 16px;\r\n  margin-left: 420px;\r\n  color: #999;\r\n}\r\n.content .stitle {\r\n  background-color: #0195ff;\r\n}\r\n.content .title span {\r\n  margin-right: 10px;\r\n}\r\n#msg .content .title {\r\n  font-size: 20px;\r\n  margin: 0px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.content {\r\n  margin-top: 20px;\r\n  background-color: #fff;\r\n}\r\n.content .header {\r\n  padding: 10px 30px;\r\n}\r\n.wrapper .info {\r\n  margin: 20px 0px 0px 20px;\r\n  border-top: 1px solid #eee;\r\n  padding: 20px 0px 10px 0px;\r\n}\r\n.wrapper .info a {\r\n  color: #88949b;\r\n  font-size: 14px;\r\n}\r\n.wrapper .info a:hover {\r\n  color: #0195ff;\r\n}\r\n.wrapper .bottom .btn {\r\n  cursor: pointer;\r\n  padding: 5px 10px;\r\n  border: 1px solid #88949b;\r\n  border-radius: 4px;\r\n}\r\n.wrapper .bottom {\r\n  display: flex;\r\n  list-style-type:none;\r\n  margin-left: 20px;\r\n  color: #999;\r\n  font-size: 14px;\r\n  align-items: center;\r\n}\r\n.wrapper .bottom li {\r\n  margin-right: 14px;\r\n}\r\n#msg {\r\n  background-color: #eee;\r\n  width: 980px;\r\n  margin: 0 auto;\r\n}\r\n#msg .title {\r\n  margin: 20px;\r\n}\r\n#msg .wrapper {\r\n  background-color: #fff;\r\n  padding: 10px;\r\n}\r\n.wrapper .top {\r\n  display: flex;\r\n  margin: 20px;\r\n  align-items: center;\r\n  list-style-type:none\r\n}\r\n.wrapper .top .right {\r\n  margin-left: auto;\r\n}\r\n.wrapper .top .example {\r\n  color: #333;\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n}\r\n.wrapper .top li i {\r\n  margin-left: 20px;\r\n  color: #88949b;\r\n}\r\n.wrapper .right .count {\r\n  margin-right: 60px;\r\n  color: #fff;\r\n  padding: 4px 10px;\r\n  background-color: #88949b;\r\n  border-top-left-radius: 4px;\r\n  border-bottom-left-radius: 4px;\r\n  border: 1px solid #88949b;\r\n}\r\n.wrapper .right .score {\r\n  position: absolute;\r\n  left: 53px;\r\n  top: -5px;\r\n  padding: 1px 12px;\r\n  font-size: 20px;\r\n  color: #88949b;\r\n  border: 1px dashed #88949b;\r\n  border-left: none;\r\n  border-top-right-radius: 4px;\r\n  border-bottom-right-radius: 4px;\r\n  font-weight: bold;\r\n}\r\n.wrapper .right div {\r\n  position: relative;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}
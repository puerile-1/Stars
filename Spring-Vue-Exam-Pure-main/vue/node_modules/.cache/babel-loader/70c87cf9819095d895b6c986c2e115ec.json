{"ast":null,"code":"// import store from '@/store/index'\nimport { mapState } from 'vuex';\nimport request from \"@/utils/request\";\nexport default {\n  // store,\n  data() {\n    return {\n      startTime: null,\n      //考试开始时间\n      endTime: null,\n      //考试结束时间\n      time: null,\n      //考试持续时间\n      reduceAnswer: [],\n      //vue官方不支持3层以上数据嵌套,如嵌套则会数据渲染出现问题,此变量直接接收3层嵌套时的数据。\n      answerScore: 0,\n      //答题总分数\n      bg_flag: false,\n      //已答标识符,已答改变背景色\n      isFillClick: false,\n      //选择题是否点击标识符\n      slider_flag: true,\n      //左侧显示隐藏标识符\n      flag: false,\n      //个人信息显示隐藏标识符\n      currentType: 1,\n      //当前题型类型  1--选择题  2--填空题  3--判断题\n      radio: [],\n      //保存考生所有选择题的选项\n      title: \"请选择正确的选项\",\n      index: 0,\n      //全局index\n      userInfo: {\n        //用户信息\n        name: null,\n        id: null\n      },\n      topicCount: [],\n      //每种类型题目的总数\n      score: [],\n      //每种类型分数的总数\n      examData: {//考试信息\n        // source: null,\n        // totalScore: null,\n      },\n      topic: {//试卷信息\n      },\n      showQuestion: [],\n      //当前显示题目信息\n      showAnswer: {},\n      //当前题目对应的答案选项\n      number: 1,\n      //题号\n      part: null,\n      //填空题的空格数量\n      fillAnswer: [[]],\n      //二维数组保存所有填空题答案\n      judgeAnswer: [],\n      //保存所有判断题答案\n      topic1Answer: [],\n      //学生选择题作答编号,\n      rightAnswer: ''\n    };\n  },\n\n  created() {\n    this.getCookies();\n    this.getExamData();\n    this.showTime();\n  },\n\n  methods: {\n    getTime(date) {\n      //日期格式化\n      let year = date.getFullYear();\n      let month = date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\n      let day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n      let hours = date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\n      let minutes = date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n      let seconds = date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds(); // 拼接\n\n      return year + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n    },\n\n    getCookies() {\n      //获取cookie\n      this.userInfo.name = this.$cookies.get(\"data\").studentName;\n      this.userInfo.id = this.$cookies.get(\"data\").studetnId;\n    },\n\n    calcuScore() {//计算答题分数\n    },\n\n    getExamData() {\n      //获取当前试卷所有信息\n      let date = new Date();\n      this.startTime = this.getTime(date);\n      let examCode = this.$route.query.examCode; //获取路由传递过来的试卷编号\n\n      request.get(\"/exam/\" + examCode).then(res => {\n        //通过examCode请求试卷详细信息\n        console.log(res.data);\n        this.examData = res.data;\n        this.index = 0;\n        this.time = this.examData.totalScore; //获取分钟数\n\n        let paperId = this.examData.paperId;\n        request.get(\"/paperManage\", {\n          params: {\n            paperId: paperId\n          }\n        }).then(res => {\n          //通过paperId获取试题题目信息\n          console.log(res.data);\n          this.topic = { ...res.data\n          };\n          let reduceAnswer = this.topic[1][this.index];\n          this.reduceAnswer = reduceAnswer;\n          let keys = Object.keys(this.topic); //对象转数组\n\n          keys.forEach(e => {\n            let data = this.topic[e];\n            this.topicCount.push(data.length);\n            let currentScore = 0;\n\n            for (let i = 0; i < data.length; i++) {\n              //循环每种题型,计算出总分\n              currentScore += data[i].score;\n            }\n\n            this.score.push(currentScore); //把每种题型总分存入score\n          });\n          let len = this.topicCount[1];\n          let father = [];\n\n          for (let i = 0; i < len; i++) {\n            //根据填空题数量创建二维空数组存放每道题答案\n            let children = [null, null, null, null];\n            father.push(children);\n          }\n\n          this.fillAnswer = father;\n          let dataInit = this.topic[1];\n          this.number = 1;\n          this.showQuestion = dataInit[0].question;\n          this.showAnswer = dataInit[0];\n        });\n      });\n    },\n\n    change(index) {\n      //选择题\n      this.index = index;\n      let reduceAnswer = this.topic[1][this.index];\n      this.reduceAnswer = reduceAnswer;\n      this.isFillClick = true;\n      this.currentType = 1;\n      let len = this.topic[1].length;\n\n      if (this.index < len) {\n        if (this.index <= 0) {\n          this.index = 0;\n        }\n\n        console.log(`总长度${len}`);\n        console.log(`当前index:${index}`);\n        this.title = \"请选择正确的选项\";\n        let Data = this.topic[1]; // console.log(Data)\n\n        this.showQuestion = Data[this.index].question; //获取题目信息\n\n        this.showAnswer = Data[this.index];\n        this.number = this.index + 1;\n      } else if (this.index >= len) {\n        this.index = 0;\n        this.fill(this.index);\n      }\n    },\n\n    fillBG() {\n      //填空题已答题目 如果已答该题目,设置第四个元素为true为标识符\n      if (this.fillAnswer[this.index][0] != null) {\n        this.fillAnswer[this.index][3] = true;\n      }\n    },\n\n    fill(index) {\n      //填空题\n      let len = this.topic[2].length;\n      this.currentType = 2;\n      this.index = index;\n\n      if (index < len) {\n        if (index < 0) {\n          index = this.topic[1].length - 1;\n          this.change(index);\n        } else {\n          console.log(`总长度${len}`);\n          console.log(`当前index:${index}`);\n          this.title = \"请在横线处填写答案\";\n          let Data = this.topic[2];\n          console.log(Data);\n          this.showQuestion = Data[index].question; //获取题目信息\n\n          let part = this.showQuestion.split(\"()\").length - 1; //根据题目中括号的数量确定填空横线数量\n\n          this.part = part;\n          this.number = this.topicCount[0] + index + 1;\n        }\n      } else if (index >= len) {\n        this.index = 0;\n        this.judge(this.index);\n      }\n    },\n\n    judge(index) {\n      //判断题\n      let len = this.topic[3].length;\n      this.currentType = 3;\n      this.index = index;\n\n      if (this.index < len) {\n        if (this.index < 0) {\n          this.index = this.topic[2].length - 1;\n          this.fill(this.index);\n        } else {\n          console.log(`总长度${len}`);\n          console.log(`当前index:${this.index}`);\n          this.title = \"请作出正确判断\";\n          let Data = this.topic[3];\n          console.log(Data);\n          this.showQuestion = Data[index].question; //获取题目信息\n\n          this.number = this.topicCount[0] + this.topicCount[1] + index + 1;\n        }\n      } else if (this.index >= len) {\n        this.index = 0;\n        this.change(this.index);\n      }\n    },\n\n    getChangeLabel(val) {\n      //获取选择题作答选项\n      this.radio[this.index] = val; //当前选择的序号\n\n      if (val) {\n        let data = this.topic[1];\n        this.bg_flag = true;\n        data[this.index][\"isClick\"] = true;\n      }\n      /* 保存学生答题选项 */\n\n\n      this.topic1Answer[this.index] = val;\n    },\n\n    getJudgeLabel(val) {\n      //获取判断题作答选项\n      this.judgeAnswer[this.index] = val;\n\n      if (val) {\n        let data = this.topic[3];\n        this.bg_flag = true;\n        data[this.index][\"isClick\"] = true;\n      }\n    },\n\n    previous() {\n      //上一题\n      this.index--;\n\n      switch (this.currentType) {\n        case 1:\n          this.change(this.index);\n          break;\n\n        case 2:\n          this.fill(this.index);\n          break;\n\n        case 3:\n          this.judge(this.index);\n          break;\n      }\n    },\n\n    next() {\n      //下一题\n      this.index++;\n\n      switch (this.currentType) {\n        case 1:\n          this.change(this.index);\n          break;\n\n        case 2:\n          this.fill(this.index);\n          break;\n\n        case 3:\n          this.judge(this.index);\n          break;\n      }\n    },\n\n    mark() {\n      //标记功能\n      switch (this.currentType) {\n        case 1:\n          this.topic[1][this.index][\"isMark\"] = true; //选择题标记\n\n          break;\n\n        case 2:\n          this.topic[2][this.index][\"isMark\"] = true; //填空题标记\n\n          break;\n\n        case 3:\n          this.topic[3][this.index][\"isMark\"] = true;\n        //判断题标记\n      }\n    },\n\n    commit() {\n      //答案提交计算分数\n\n      /* 计算选择题总分 */\n      let topic1Answer = this.topic1Answer;\n      let finalScore = 0;\n      topic1Answer.forEach((element, index) => {\n        //循环每道选择题根据选项计算分数\n        let right = null;\n\n        if (element != null) {\n          switch (element) {\n            //选项1,2,3,4 转换为 \"A\",\"B\",\"C\",\"D\"\n            case 1:\n              right = \"A\";\n              break;\n\n            case 2:\n              right = \"B\";\n              break;\n\n            case 3:\n              right = \"C\";\n              break;\n\n            case 4:\n              right = \"D\";\n          }\n\n          if (right == this.topic[1][index].rightAnswer) {\n            // 当前选项与正确答案对比\n            finalScore += this.topic[1][index].score; // 计算总分数\n          }\n\n          console.log(right, this.topic[1][index].rightAnswer);\n        } // console.log(topic1Answer)\n\n      });\n      /**计算判断题总分 */\n      // console.log(`this.fillAnswer${this.fillAnswer}`)\n      // console.log(this.topic[2][this.index])\n\n      let fillAnswer = this.fillAnswer;\n      fillAnswer.forEach((element, index) => {\n        //此处index和 this.index数据不一致，注意\n        element.forEach(inner => {\n          if (this.topic[2][index].answer.includes(inner)) {\n            //判断填空答案是否与数据库一致\n            console.log(\"正确\");\n            finalScore += this.topic[2][this.index].score;\n          }\n        });\n      });\n      /** 计算判断题总分 */\n\n      let topic3Answer = this.judgeAnswer;\n      topic3Answer.forEach((element, index) => {\n        let right = null;\n\n        switch (element) {\n          case 1:\n            right = \"T\";\n            break;\n\n          case 2:\n            right = \"F\";\n        }\n\n        if (right == this.topic[3][index].answer) {\n          // 当前选项与正确答案对比\n          finalScore += this.topic[3][index].score; // 计算总分数\n        }\n      });\n      console.log(`目前总分${finalScore}`);\n\n      if (this.time != 0) {\n        this.$confirm(\"考试结束时间未到,是否提前交卷\", \"友情提示\", {\n          confirmButtonText: '立即交卷',\n          cancelButtonText: '再检查一下',\n          type: 'warning'\n        }).then(() => {\n          console.log(\"交卷\");\n          let date = new Date();\n          this.endTime = this.getTime(date);\n          let answerDate = this.endTime.substr(0, 10); //提交成绩信息\n\n          request.post(\"/score\", {\n            examCode: this.examData.examCode,\n            //考试编号\n            studentId: this.$cookies.get(\"data\").studentId,\n            //学号\n            studentName: this.$cookies.get(\"data\").studentName,\n            subject: this.examData.source,\n            //课程名称\n            etScore: finalScore,\n            //答题成绩\n            answerDate: answerDate //答题日期\n\n          }).then(res => {\n            if (res.code == '0') {\n              console.log(finalScore);\n              let qq = {\n                subjectName: this.examData.source,\n                oldScore: this.examData.totalScore,\n                score: finalScore,\n                startTime: this.startTime,\n                endTime: this.endTime\n              };\n              this.$cookies.set(\"exam\", qq);\n              this.$router.push({\n                path: '/answerScore'\n              });\n            }\n          });\n        }).catch(() => {\n          console.log(\"继续答题\");\n        });\n      }\n    },\n\n    showTime() {\n      //倒计时\n      setInterval(() => {\n        this.time -= 1;\n\n        if (this.time == 10) {\n          this.$message({\n            showClose: true,\n            type: 'error',\n            message: '考生注意,考试时间还剩10分钟！！！'\n          });\n\n          if (this.time == 0) {\n            console.log(\"考试时间已到,强制交卷。\");\n          }\n        }\n      }, 1000 * 60);\n    }\n\n  },\n  computed: mapState([\"isPractice\"])\n};","map":{"version":3,"mappings":"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","names":["mapState","request","data","startTime","endTime","time","reduceAnswer","answerScore","bg_flag","isFillClick","slider_flag","flag","currentType","radio","title","index","userInfo","name","id","topicCount","score","examData","topic","showQuestion","showAnswer","number","part","fillAnswer","judgeAnswer","topic1Answer","rightAnswer","created","getCookies","getExamData","showTime","methods","getTime","date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","$cookies","get","studentName","studetnId","calcuScore","Date","examCode","$route","query","then","res","console","log","totalScore","paperId","params","keys","Object","forEach","e","push","length","currentScore","i","len","father","children","dataInit","question","change","Data","fill","fillBG","split","judge","getChangeLabel","val","getJudgeLabel","previous","next","mark","commit","finalScore","element","right","inner","answer","includes","topic3Answer","$confirm","confirmButtonText","cancelButtonText","type","answerDate","substr","post","studentId","subject","source","etScore","code","qq","subjectName","oldScore","set","$router","path","catch","setInterval","$message","showClose","message","computed"],"sourceRoot":"","sources":["F:\\21-22-2\\大三短学期\\大作业\\Spring-Vue-Exam-Pure-main\\Spring-Vue-Exam-Pure-main\\vue\\src\\components\\student\\answer.vue"],"sourcesContent":["<!--考生答题界面-->\n<template>\n  <div v-wechat-title=\"$route.meta.title\" id=\"answer\">\n    <!--顶部信息栏-->\n     <div class=\"top\">\n       <ul class=\"item\">\n         <li><i class=\"iconfont icon-menufold icon20\" ref=\"toggle\" @click=\"slider_flag = !slider_flag\"></i></li>\n         <li>{{examData.type}}-{{examData.source}}</li>\n         <li @click=\"flag = !flag\">\n           <i class=\"iconfont icon-user icon20\"></i>\n           <div class=\"msg\"  v-if=\"flag\" @click=\"flag = !flag\">\n             <p>姓名：{{userInfo.name}}</p>\n             <p>准考证号:  {{userInfo.id}}</p>\n           </div>\n         </li>\n         <li><i class=\"iconfont icon-arrLeft icon20\"></i></li>\n       </ul>\n     </div>\n     <div class=\"flexarea\">\n        <!--左边题目编号区-->\n        <transition name=\"slider-fade\">\n          <div class=\"left\" v-if=\"slider_flag\">\n            <ul class=\"l-top\">\n              <li>\n                <a></a>\n                <span>当前</span>\n              </li>\n              <li>\n                <a></a>\n                <span>未答</span>\n              </li>\n              <li>\n                <a></a>\n                <span>已答</span>\n              </li>\n              <li>\n                <a></a>\n                <span>标记</span>\n              </li>\n            </ul>\n            <div class=\"l-bottom\">\n              <div class=\"item\">\n                <p>选择题部分</p>\n                <ul>\n                  <li v-for=\"(list, index1) in topic[1]\" :key=\"index1\">\n                    <a\n                      @click=\"change(index1)\"\n                      :class=\"{'border': index == index1 && currentType == 1,'bg': bg_flag && topic[1][index1].isClick == true}\">\n                      <span :class=\"{'mark': topic[1][index1].isMark == true}\"></span>\n                      {{index1+1}}\n                    </a>\n                  </li>\n                </ul>\n              </div>\n              <div class=\"item\">\n                <p>填空题部分</p>\n                <ul>\n                  <li v-for=\"(list, index2) in topic[2]\" :key=\"index2\">\n                    <a @click=\"fill(index2)\" :class=\"{'border': index == index2 && currentType == 2,'bg': fillAnswer[index2][3] == true}\"><span :class=\"{'mark': topic[2][index2].isMark == true}\"></span>{{topicCount[0]+index2+1}}</a>\n                  </li>\n                </ul>\n              </div>\n              <div class=\"item\">\n                <p>判断题部分</p>\n                <ul>\n                  <li v-for=\"(list, index3) in topic[3]\" :key=\"index3\">\n                    <a  @click=\"judge(index3)\" :class=\"{'border': index == index3 && currentType == 3,'bg': bg_flag && topic[3][index3].isClick == true}\"><span :class=\"{'mark': topic[3][index3].isMark == true}\"></span>{{topicCount[0]+topicCount[1]+index3+1}}</a>\n                  </li>\n                </ul>\n              </div>\n              <div class=\"final\" @click=\"commit()\">结束考试</div>\n            </div>\n          </div>\n        </transition>\n        <!--右边选择答题区-->\n        <transition name=\"slider-fade\">\n        <div class=\"right\">\n          <div class=\"title\">\n            <p>{{title}}</p>\n            <i class=\"iconfont icon-right auto-right\"></i>\n            <span>全卷共{{topicCount[0] + topicCount[1] + topicCount[2]}}题  <i class=\"iconfont icon-time\"></i>倒计时：<b>{{time}}</b>分钟</span>\n          </div>\n          <div class=\"content\">\n            <p class=\"topic\"><span class=\"number\">{{number}}</span>{{showQuestion}}</p>\n            <div v-if=\"currentType == 1\">\n              <el-radio-group v-model=\"radio[index]\" @change=\"getChangeLabel\" size=\"large\"  >\n                <el-radio  :label=\"1\">{{showAnswer.answerA}}</el-radio>\n                <el-radio :label=\"2\">{{showAnswer.answerB}}</el-radio>\n                <el-radio :label=\"3\">{{showAnswer.answerC}}</el-radio>\n                <el-radio :label=\"4\">{{showAnswer.answerD}}</el-radio>\n              </el-radio-group>\n              <div class=\"analysis\" v-if=\"isPractice\">\n                <ul>\n                  <li> <el-tag type=\"success\">正确姿势：</el-tag><span class=\"right\">{{reduceAnswer.rightAnswer}}</span></li>\n                  <li><el-tag>题目解析：</el-tag></li>\n                  <li>{{reduceAnswer.analysis == null ? '暂无解析': reduceAnswer.analysis}}</li>\n                </ul>\n              </div>\n            </div>\n            <div class=\"fill\" v-if=\"currentType == 2\">\n              <div v-for=\"(item,currentIndex) in part\" :key=\"currentIndex\">\n                <el-input placeholder=\"请填在此处\"\n                  v-model=\"fillAnswer[index][currentIndex]\"\n                  clearable\n                  @blur=\"fillBG\">\n                </el-input>\n              </div>\n              <div class=\"analysis\" v-if=\"isPractice\">\n                <ul>\n                  <li> <el-tag type=\"success\">正确姿势：</el-tag><span class=\"right\">{{topic[2][index].answer}}</span></li>\n                  <li><el-tag>题目解析：</el-tag></li>\n                  <li>{{topic[2][index].analysis == null ? '暂无解析': topic[2][index].analysis}}</li>\n                </ul>\n              </div>\n            </div>\n            <div class=\"judge\" v-if=\"currentType == 3\">\n              <el-radio-group v-model=\"judgeAnswer[index]\" @change=\"getJudgeLabel\" v-if=\"currentType == 3\">\n                <el-radio :label=\"1\">正确</el-radio>\n                <el-radio :label=\"2\">错误</el-radio>\n              </el-radio-group>\n              <div class=\"analysis\" v-if=\"isPractice\">\n                <ul>\n                  <li> <el-tag type=\"success\">正确姿势：</el-tag><span class=\"right\">{{topic[3][index].answer}}</span></li>\n                  <li><el-tag>题目解析：</el-tag></li>\n                  <li>{{topic[3][index].analysis == null ? '暂无解析': topic[3][index].analysis}}</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"operation\">\n            <ul class=\"end\">\n              <li @click=\"previous()\"><i class=\"iconfont icon-previous\"></i><span>上一题</span></li>\n              <li @click=\"mark()\"><i class=\"iconfont icon-mark-o\"></i><span>标记</span></li>\n              <li @click=\"next()\"><span>下一题</span><i class=\"iconfont icon-next\"></i></li>\n            </ul>\n          </div>\n        </div>\n        </transition>\n     </div>\n  </div>\n</template>\n\n<script>\n// import store from '@/store/index'\nimport {mapState} from 'vuex'\nimport request from \"@/utils/request\";\nexport default {\n  // store,\n  data() {\n    return {\n      startTime: null, //考试开始时间\n      endTime: null, //考试结束时间\n      time: null, //考试持续时间\n      reduceAnswer:[],  //vue官方不支持3层以上数据嵌套,如嵌套则会数据渲染出现问题,此变量直接接收3层嵌套时的数据。\n      answerScore: 0, //答题总分数\n      bg_flag: false, //已答标识符,已答改变背景色\n      isFillClick: false, //选择题是否点击标识符\n      slider_flag: true, //左侧显示隐藏标识符\n      flag: false, //个人信息显示隐藏标识符\n      currentType: 1, //当前题型类型  1--选择题  2--填空题  3--判断题\n      radio: [], //保存考生所有选择题的选项\n      title: \"请选择正确的选项\",\n      index: 0, //全局index\n      userInfo: { //用户信息\n        name: null,\n        id: null\n      },\n      topicCount: [],//每种类型题目的总数\n      score: [],  //每种类型分数的总数\n      examData: { //考试信息\n        // source: null,\n        // totalScore: null,\n      },\n      topic: {  //试卷信息\n\n      },\n      showQuestion: [], //当前显示题目信息\n      showAnswer: {}, //当前题目对应的答案选项\n      number: 1, //题号\n      part: null, //填空题的空格数量\n      fillAnswer: [[]], //二维数组保存所有填空题答案\n      judgeAnswer: [], //保存所有判断题答案\n      topic1Answer: [],  //学生选择题作答编号,\n      rightAnswer: ''\n    }\n  },\n  created() {\n    this.getCookies()\n    this.getExamData()\n    this.showTime()\n  },\n  methods: {\n    getTime(date) { //日期格式化\n      let year = date.getFullYear()\n      let month= date.getMonth()+ 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\n      let day=date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n      let hours=date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\n      let minutes=date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n      let seconds=date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\n      // 拼接\n      return year+\"-\"+month+\"-\"+day+\" \"+hours+\":\"+minutes+\":\"+seconds;\n    },\n    getCookies() {  //获取cookie\n      this.userInfo.name = this.$cookies.get(\"data\").studentName\n      this.userInfo.id = this.$cookies.get(\"data\").studetnId\n    },\n    calcuScore() { //计算答题分数\n\n    },\n    getExamData() { //获取当前试卷所有信息\n      let date = new Date()\n      this.startTime = this.getTime(date)\n      let examCode = this.$route.query.examCode //获取路由传递过来的试卷编号\n      request.get(\"/exam/\"+examCode).then(res => {  //通过examCode请求试卷详细信息\n        console.log(res.data)\n        this.examData = res.data\n        this.index = 0\n        this.time = this.examData.totalScore //获取分钟数\n        let paperId = this.examData.paperId\n        request.get(\"/paperManage\",{\n          params:{\n            paperId:paperId\n          }\n        }).then(res => {  //通过paperId获取试题题目信息\n          console.log(res.data)\n          this.topic = {...res.data}\n          let reduceAnswer = this.topic[1][this.index]\n          this.reduceAnswer = reduceAnswer\n          let keys = Object.keys(this.topic) //对象转数组\n          keys.forEach(e => {\n            let data = this.topic[e]\n            this.topicCount.push(data.length)\n            let currentScore = 0\n            for(let i = 0; i< data.length; i++) { //循环每种题型,计算出总分\n              currentScore += data[i].score\n            }\n            this.score.push(currentScore) //把每种题型总分存入score\n          })\n          let len = this.topicCount[1]\n          let father = []\n          for(let i = 0; i < len; i++) { //根据填空题数量创建二维空数组存放每道题答案\n            let children = [null,null,null,null]\n            father.push(children)\n          }\n          this.fillAnswer = father\n          let dataInit = this.topic[1]\n          this.number = 1\n          this.showQuestion = dataInit[0].question\n          this.showAnswer = dataInit[0]\n        })\n      })\n    },\n    change(index) { //选择题\n      this.index = index\n      let reduceAnswer = this.topic[1][this.index]\n      this.reduceAnswer = reduceAnswer\n      this.isFillClick = true\n      this.currentType = 1\n      let len = this.topic[1].length\n      if(this.index < len) {\n        if(this.index <= 0){\n          this.index = 0\n        }\n        console.log(`总长度${len}`)\n        console.log(`当前index:${index}`)\n        this.title = \"请选择正确的选项\"\n        let Data = this.topic[1]\n        // console.log(Data)\n        this.showQuestion = Data[this.index].question //获取题目信息\n        this.showAnswer = Data[this.index]\n        this.number = this.index + 1\n      }else if(this.index >= len) {\n        this.index = 0\n        this.fill(this.index)\n      }\n    },\n    fillBG() { //填空题已答题目 如果已答该题目,设置第四个元素为true为标识符\n      if(this.fillAnswer[this.index][0] != null) {\n        this.fillAnswer[this.index][3] = true\n      }\n    },\n    fill(index) { //填空题\n      let len = this.topic[2].length\n      this.currentType = 2\n      this.index = index\n      if(index < len) {\n        if(index < 0) {\n          index = this.topic[1].length -1\n          this.change(index)\n        }else {\n          console.log(`总长度${len}`)\n          console.log(`当前index:${index}`)\n          this.title = \"请在横线处填写答案\"\n          let Data = this.topic[2]\n          console.log(Data)\n          this.showQuestion = Data[index].question //获取题目信息\n          let part= this.showQuestion.split(\"()\").length -1 //根据题目中括号的数量确定填空横线数量\n          this.part = part\n          this.number = this.topicCount[0] + index + 1\n        }\n      }else if(index >= len) {\n        this.index = 0\n        this.judge(this.index)\n      }\n    },\n    judge(index) { //判断题\n      let len = this.topic[3].length\n      this.currentType = 3\n      this.index = index\n      if(this.index < len) {\n        if(this.index < 0){\n          this.index = this.topic[2].length - 1\n          this.fill(this.index)\n        }else {\n          console.log(`总长度${len}`)\n          console.log(`当前index:${this.index}`)\n          this.title = \"请作出正确判断\"\n          let Data = this.topic[3]\n          console.log(Data)\n          this.showQuestion = Data[index].question //获取题目信息\n          this.number = this.topicCount[0] + this.topicCount[1] + index + 1\n        }\n      }else if (this.index >= len) {\n        this.index = 0\n        this.change(this.index)\n      }\n    },\n    getChangeLabel(val) { //获取选择题作答选项\n      this.radio[this.index] = val //当前选择的序号\n      if(val) {\n        let data = this.topic[1]\n        this.bg_flag = true\n        data[this.index][\"isClick\"] = true\n      }\n      /* 保存学生答题选项 */\n      this.topic1Answer[this.index] = val\n    },\n    getJudgeLabel(val) {  //获取判断题作答选项\n      this.judgeAnswer[this.index] = val\n      if(val) {\n        let data = this.topic[3]\n        this.bg_flag = true\n        data[this.index][\"isClick\"] = true\n      }\n    },\n    previous() { //上一题\n      this.index --\n      switch(this.currentType) {\n        case 1:\n          this.change(this.index)\n          break\n        case 2:\n          this.fill(this.index)\n          break\n        case 3:\n          this.judge(this.index)\n          break\n      }\n    },\n    next() { //下一题\n      this.index ++\n      switch(this.currentType) {\n        case 1:\n          this.change(this.index)\n          break\n        case 2:\n          this.fill(this.index)\n          break\n        case 3:\n          this.judge(this.index)\n          break\n      }\n    },\n    mark() { //标记功能\n      switch(this.currentType) {\n        case 1:\n          this.topic[1][this.index][\"isMark\"] = true //选择题标记\n          break\n        case 2:\n          this.topic[2][this.index][\"isMark\"] = true //填空题标记\n          break\n        case 3:\n          this.topic[3][this.index][\"isMark\"] = true //判断题标记\n      }\n    },\n    commit() { //答案提交计算分数\n      /* 计算选择题总分 */\n      let topic1Answer = this.topic1Answer\n      let finalScore = 0\n      topic1Answer.forEach((element,index) => { //循环每道选择题根据选项计算分数\n        let right = null\n        if(element != null) {\n          switch(element) { //选项1,2,3,4 转换为 \"A\",\"B\",\"C\",\"D\"\n            case 1:\n              right = \"A\"\n              break\n            case 2:\n              right = \"B\"\n              break\n            case 3:\n              right = \"C\"\n              break\n            case 4:\n              right = \"D\"\n          }\n          if(right == this.topic[1][index].rightAnswer) { // 当前选项与正确答案对比\n            finalScore += this.topic[1][index].score // 计算总分数\n          }\n          console.log(right,this.topic[1][index].rightAnswer)\n        }\n        // console.log(topic1Answer)\n      })\n      /**计算判断题总分 */\n      // console.log(`this.fillAnswer${this.fillAnswer}`)\n      // console.log(this.topic[2][this.index])\n      let fillAnswer = this.fillAnswer\n      fillAnswer.forEach((element,index) => { //此处index和 this.index数据不一致，注意\n        element.forEach((inner) => {\n          if(this.topic[2][index].answer.includes(inner)) { //判断填空答案是否与数据库一致\n            console.log(\"正确\")\n            finalScore += this.topic[2][this.index].score\n          }\n        })\n      });\n      /** 计算判断题总分 */\n      let topic3Answer = this.judgeAnswer\n      topic3Answer.forEach((element,index) => {\n        let right = null\n        switch(element) {\n          case 1:\n            right = \"T\"\n            break\n          case 2:\n            right = \"F\"\n        }\n        if(right == this.topic[3][index].answer) { // 当前选项与正确答案对比\n            finalScore += this.topic[3][index].score // 计算总分数\n          }\n      })\n      console.log(`目前总分${finalScore}`)\n      if(this.time != 0) {\n        this.$confirm(\"考试结束时间未到,是否提前交卷\",\"友情提示\",{\n          confirmButtonText: '立即交卷',\n          cancelButtonText: '再检查一下',\n          type: 'warning'\n        }).then(() => {\n          console.log(\"交卷\")\n          let date = new Date()\n          this.endTime = this.getTime(date)\n          let answerDate = this.endTime.substr(0,10)\n          //提交成绩信息\n          request.post(\"/score\", {\n              examCode: this.examData.examCode, //考试编号\n              studentId: this.$cookies.get(\"data\").studentId, //学号\n              studentName: this.$cookies.get(\"data\").studentName,\n              subject: this.examData.source, //课程名称\n              etScore: finalScore, //答题成绩\n              answerDate: answerDate, //答题日期\n          }).then(res => {\n            if(res.code == '0') {\n              console.log(finalScore)\n              let qq = {\n                subjectName:this.examData.source,\n                oldScore:this.examData.totalScore,\n                score: finalScore,\n                startTime: this.startTime,\n                endTime: this.endTime\n              }\n              this.$cookies.set(\"exam\",qq)\n              this.$router.push({path:'/answerScore'})\n            }\n          })\n        }).catch(() => {\n          console.log(\"继续答题\")\n        })\n      }\n    },\n    showTime() { //倒计时\n      setInterval(() => {\n        this.time -= 1\n        if(this.time == 10) {\n          this.$message({\n            showClose: true,\n            type: 'error',\n            message: '考生注意,考试时间还剩10分钟！！！'\n          })\n          if(this.time == 0) {\n            console.log(\"考试时间已到,强制交卷。\")\n          }\n        }\n      },1000 * 60)\n    }\n  },\n  computed:mapState([\"isPractice\"])\n}\n</script>\n\n<style lang=\"scss\">\n.iconfont.icon-time {\n  color: #2776df;\n  margin: 0px 6px 0px 20px;\n}\n.analysis {\n  margin-top: 20px;\n  .right {\n    color: #2776df;\n    font-size: 18px;\n    border: 1px solid #2776df;\n    padding: 0px 6px;\n    border-radius: 4px;\n    margin-left: 20px;\n  }\n  ul li:nth-child(2) {\n    margin: 20px 0px;\n  }\n  ul li:nth-child(3) {\n    padding: 10px;\n    background-color: #d3c6c9;\n    border-radius: 4px;\n  }\n}\n.analysis span:nth-child(1) {\n  font-size: 18px;\n}\n.mark {\n  position: absolute;\n  width: 4px;\n  height: 4px;\n  content: \"\";\n  background-color: red;\n  border-radius: 50%;\n  top: 0px;\n  left: 22px;\n}\n.border {\n  position: relative;\n  border: 1px solid #FF90AA !important;\n}\n.bg {\n  background-color: #5188b8 !important;\n}\n.fill .el-input {\n  display: inline-flex;\n  width: 150px;\n  margin-left: 20px;\n  .el-input__inner {\n    border: 1px solid transparent;\n    border-bottom: 1px solid #eee;\n    padding-left: 20px;\n  }\n}\n/* slider过渡效果 */\n.slider-fade-enter-active {\n  transition: all .3s ease;\n}\n.slider-fade-leave-active {\n  transition: all .3s cubic-bezier(1.0, 0.5, 0.8, 1.0);\n}\n.slider-fade-enter, .slider-fade-leave-to {\n  transform: translateX(-100px);\n  opacity: 0;\n}\n\n.operation .end li:nth-child(2) {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(39, 118, 223);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  color: #fff;\n}\n.operation .end li {\n  cursor: pointer;\n  margin: 0 100px;\n}\n.operation {\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 10px 0px;\n  margin-right: 10px;\n}\n.operation .end {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgb(39, 118, 223);\n}\n.content .number {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  background-color: rgb(127, 175, 239);\n  border-radius: 4px;\n  margin-right: 4px;\n}\n.content {\n  padding: 0px 20px;\n}\n.content .topic {\n  padding: 20px 0px;\n  padding-top: 30px;\n}\n.right .content {\n  background-color: #fff;\n  margin: 10px;\n  margin-left: 0px;\n  height: 470px;\n  font-size: 20px;\n\n}\n.content .el-radio-group label {\n  color: #000;\n  margin: 8px 0px;\n  font-size: 30px !important;\n}\n.content .el-radio-group {\n  display: flex;\n  flex-direction:column;\n  align-items: flex-start;\n}\n//.content .el-radio /deep/ .el-radio label{\n//  font-size: 30px !important;\n//}\n.right .title p {\n  margin-left: 20px;\n}\n.flexarea {\n  display: flex;\n}\n.flexarea .right {\n  flex: 1;\n}\n.auto-right {\n  margin-left: auto;\n  color: #2776df;\n  margin-right: 10px;\n}\n.right .title {\n  margin-right: 10px;\n  padding-right: 30px;\n  display: flex;\n  margin-top: 10px;\n  background-color: #fff;\n  height: 50px;\n  line-height: 50px;\n}\n.clearfix {\n  clear: both;\n}\n.l-bottom .final {\n  cursor: pointer;\n  display: inline-block;\n  text-align: center;\n background-color: rgb(39, 118, 223);\n  width: 240px;\n  margin: 20px 0px 20px 10px;\n  border-radius: 4px;\n  height: 30px;\n  line-height: 30px;\n  color: #fff;\n  margin-top: 22px;\n}\n#answer .left .item {\n  padding: 0px;\n  font-size: 16px;\n}\n.l-bottom {\n  border-radius: 4px;\n  background-color: #fff;\n}\n.l-bottom .item p {\n  margin-bottom: 15px;\n  margin-top: 10px;\n  color: #000;\n  margin-left: 10px;\n  letter-spacing: 2px;\n}\n.l-bottom .item li {\n  width: 15%;\n  margin-left: 5px;\n  margin-bottom: 10px;\n}\n.l-bottom .item {\n  display: flex;\n  flex-direction: column;\n}\n.l-bottom .item ul {\n  width: 100%;\n  margin-bottom: -8px;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n}\n.l-bottom .item ul li a {\n  position: relative;\n  justify-content: center;\n  display: inline-flex;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #fff;\n  border: 1px solid #eee;\n  text-align: center;\n  color: #000;\n  font-size: 16px;\n}\n.left .l-top {\n  display: flex;\n  justify-content: space-around;\n  padding: 16px 0px;\n  border: 1px solid #eee;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  background-color: #fff;\n}\n.left {\n  width: 260px;\n  height: 100%;\n  margin: 10px 10px 0px 10px;\n}\n.left .l-top li:nth-child(2) a {\n  border: 1px solid #eee;\n}\n.left .l-top li:nth-child(3) a {\n  background-color: #5188b8;\n  border: none;\n}\n.left .l-top li:nth-child(4) a {\n  position: relative;\n  border: 1px solid #eee;\n}\n.left .l-top li:nth-child(4) a::before {\n  width: 4px;\n  height: 4px;\n  content: \" \";\n  position: absolute;\n  background-color: red;\n  border-radius: 50%;\n  top: 0px;\n  left: 16px;\n}\n.left .l-top li {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n.left .l-top li a {\n  display: inline-block;\n  padding: 10px;\n  border-radius: 50%;\n  background-color: #fff;\n  border: 1px solid #FF90AA;\n}\n#answer .top {\n  background-color: rgb(39, 118, 223);\n}\n#answer .item {\n  color: #fff;\n  display: flex;\n  padding: 20px;\n  font-size: 20px;\n}\n#answer .top .item li:nth-child(1) {\n  margin-right: 10px;\n}\n#answer .top .item li:nth-child(3) {\n  position: relative;\n  margin-left: auto;\n}\n#answer {\n  padding-bottom: 30px;\n}\n.icon20 {\n  font-size: 20px;\n  font-weight: bold;\n}\n.item .msg {\n  padding: 10px 15px;\n  border-radius: 4px;\n  top: 47px;\n  right: -30px;\n  color: #6c757d;\n  position: absolute;\n  border: 1px solid rgba(0,0,0,.15);\n  background-color: #fff;\n}\n.item .msg p {\n  font-size: 16px;\n  width: 200px;\n  text-align: left;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}
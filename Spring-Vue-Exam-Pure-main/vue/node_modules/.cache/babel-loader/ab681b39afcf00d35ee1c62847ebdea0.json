{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-90282b2e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"add\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  slot: \"label\"\n}, [/*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"iconfont icon-daoru-tianchong\"\n}), /*#__PURE__*/_createTextVNode(\"在线组卷\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"box\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"试题难度:\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"选择题数量：\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode();\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"填空题数量：\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode();\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"判断题数量：\", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode();\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"立即组卷\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n  const _directive_wechat_title = _resolveDirective(\"wechat-title\");\n\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_tabs, {\n    class: \"tabs\",\n    modelValue: $data.activeName,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.activeName = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"自动组卷\",\n      name: \"second\"\n    }, {\n      default: _withCtx(() => [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_hoisted_4, _createVNode(_component_el_select, {\n        modelValue: $data.difficultyValue,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.difficultyValue = $event),\n        placeholder: \"试题难度\",\n        class: \"w150\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.difficulty, item => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: item.value,\n            label: item.label,\n            value: item.value\n          }, null, 8\n          /* PROPS */\n          , [\"label\", \"value\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"modelValue\"])]), _createElementVNode(\"li\", null, [_hoisted_5, _hoisted_6, _createVNode(_component_el_input, {\n        type: \"text\",\n        modelValue: $data.changeNumber,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.changeNumber = $event)\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]), _createElementVNode(\"li\", null, [_hoisted_7, _hoisted_8, _createVNode(_component_el_input, {\n        type: \"text\",\n        modelValue: $data.fillNumber,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.fillNumber = $event)\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]), _createElementVNode(\"li\", null, [_hoisted_9, _hoisted_10, _createVNode(_component_el_input, {\n        type: \"text\",\n        modelValue: $data.judgeNumber,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.judgeNumber = $event)\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]), _createElementVNode(\"li\", null, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[4] || (_cache[4] = $event => $options.create())\n      }, {\n        default: _withCtx(() => [_hoisted_11]),\n        _: 1\n        /* STABLE */\n\n      })])])])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"])])), [[_directive_wechat_title, _ctx.$route.meta.title]]);\n}","map":{"version":3,"mappings":";;;;;AAE0CA,OAAK,EAAC;;;gEAGxCC,oBAA2E,MAA3E,EAA2E;AAArEC,MAAI,EAAC;AAAgE,CAA3E,EAAkB,cAACD,oBAA6C,GAA7C,EAA6C;AAA1CD,OAAK,EAAC;AAAoC,CAA7C,CAAD,gCAA8C,OAA9C,CAAlB;;AAAA;;;AACKA,OAAK,EAAC;;;gEAGLC,oBAAkB,MAAlB,EAAkB,IAAlB,EAAM,OAAN,EAAW;AAAA;AAAX;;gEAWAA,oBAAmB,MAAnB,EAAmB,IAAnB,EAAM,QAAN,EAAY;AAAA;AAAZ;;;;gEAGAA,oBAAmB,MAAnB,EAAmB,IAAnB,EAAM,QAAN,EAAY;AAAA;AAAZ;;;;gEAGAA,oBAAmB,MAAnB,EAAmB,IAAnB,EAAM,QAAN,EAAY;AAAA;AAAZ;;;;kDAG4C;;;;;;;;;;;;;;;;;wCA3BxDE,oBAiCM,KAjCN,cAiCM,CAhCJC,aA+BUC,kBA/BV,EA+BU;AA/BDL,SAAK,EAAC,MA+BL;gBA/BqBM,gBA+BrB;+DA/BqBA,mBAAUC;AA+B/B,GA/BV;sBACE,MA6Bc,CA7BdH,aA6BcI,sBA7Bd,EA6Bc;AA7BDC,WAAK,EAAC,MA6BL;AA7BYC,UAAI,EAAC;AA6BjB,KA7Bd;wBACE,MAA2E,CAA3EC,UAA2E,EAC3EV,oBA0BM,KA1BN,cA0BM,CAzBJA,oBAwBK,IAxBL,EAwBK,IAxBL,EAwBK,CAvBHA,oBAUK,IAVL,EAUK,IAVL,EAUK,CATHW,UASG,EARHR,aAOYS,oBAPZ,EAOY;oBAPQP,qBAOR;mEAPQA,wBAAeC,OAOvB;AAPyBO,mBAAW,EAAC,MAOrC;AAP4Cd,aAAK,EAAC;AAOlD,OAPZ;0BAEM,MAA0B,oBAD9BG,oBAKYY,SALZ,EAKY,IALZ,EAKYC,YAJOV,gBAIP,EAJDW,IAAkB,IAAd;+BADfC,aAKYC,oBALZ,EAKY;AAHPC,eAAG,EAAEH,IAAI,CAACI,KAGH;AAFPZ,iBAAK,EAAEQ,IAAI,CAACR,KAEL;AADPY,iBAAK,EAAEJ,IAAI,CAACI;AACL,WALZ;;AAAA;SAKY,CALZ;;AAAA,SAC8B;;;;OAFhC;;AAAA,uBAQG,CAVL,CAuBG,EAZHpB,oBAEK,IAFL,EAEK,IAFL,EAEK,CADHqB,UACG,cADiBlB,aAAwDmB,mBAAxD,EAAwD;AAA9CC,YAAI,EAAC,MAAyC;oBAAzBlB,kBAAyB;mEAAzBA,qBAAYC;AAAa,OAAxD;;AAAA,uBACjB,CAFL,CAYG,EATHN,oBAEK,IAFL,EAEK,IAFL,EAEK,CADHwB,UACG,cADiBrB,aAAsDmB,mBAAtD,EAAsD;AAA5CC,YAAI,EAAC,MAAuC;oBAAvBlB,gBAAuB;mEAAvBA,mBAAUC;AAAa,OAAtD;;AAAA,uBACjB,CAFL,CASG,EANHN,oBAEK,IAFL,EAEK,IAFL,EAEK,CADHyB,UACG,eADiBtB,aAAuDmB,mBAAvD,EAAuD;AAA7CC,YAAI,EAAC,MAAwC;oBAAxBlB,iBAAwB;mEAAxBA,oBAAWC;AAAa,OAAvD;;AAAA,uBACjB,CAFL,CAMG,EAHHN,oBAEK,IAFL,EAEK,IAFL,EAEK,CADHG,aAA4DuB,oBAA5D,EAA4D;AAAjDH,YAAI,EAAC,SAA4C;AAAjCI,eAAK,sCAAEC,iBAAF;AAA4B,OAA5D;0BAA4C,MAAI;;;;OAAhD,CACG,CAFL,CAGG,CAxBL,CAyBI,CA1BN,CAD2E;;;;KAD7E,CA6Bc;;;;GA9BhB;;AAAA,mBAgCI,CAjCN,+BAAqBC,YAAOC,IAAP,CAAYC","names":["class","_createElementVNode","slot","_createElementBlock","_createVNode","_component_el_tabs","$data","$event","_component_el_tab_pane","label","name","_hoisted_2","_hoisted_4","_component_el_select","placeholder","_Fragment","_renderList","item","_createBlock","_component_el_option","key","value","_hoisted_5","_component_el_input","type","_hoisted_7","_hoisted_9","_component_el_button","onClick","$options","_ctx","meta","title"],"sourceRoot":"","sources":["F:\\21-22-2\\大三短学期\\大作业\\Spring-Vue-Exam-Pure-main\\Spring-Vue-Exam-Pure-main\\vue\\src\\components\\teacher\\AddQuestions.vue"],"sourcesContent":["// 添加题库\r\n<template>\r\n  <div v-wechat-title=\"$route.meta.title\" class=\"add\">\r\n    <el-tabs class=\"tabs\" v-model=\"activeName\">\r\n      <el-tab-pane label=\"自动组卷\" name=\"second\">\r\n        <span slot=\"label\"><i class=\"iconfont icon-daoru-tianchong\"></i>在线组卷</span>\r\n        <div class=\"box\">\r\n          <ul>\r\n            <li>\r\n              <span>试题难度:</span>\r\n              <el-select v-model=\"difficultyValue\" placeholder=\"试题难度\" class=\"w150\">\r\n                <el-option\r\n                    v-for=\"item in difficulty\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </li>\r\n            <li>\r\n              <span>选择题数量：</span> <el-input type=\"text\" v-model=\"changeNumber\"></el-input>\r\n            </li>\r\n            <li>\r\n              <span>填空题数量：</span> <el-input type=\"text\" v-model=\"fillNumber\"></el-input>\r\n            </li>\r\n            <li>\r\n              <span>判断题数量：</span> <el-input type=\"text\" v-model=\"judgeNumber\"></el-input>\r\n            </li>\r\n            <li>\r\n              <el-button type=\"primary\" @click=\"create()\">立即组卷</el-button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport { ref } from \"vue\";\r\n\r\nexport default {\r\n  name: \"addQuestions\",\r\n  data() {\r\n    return {\r\n      changeNumber: null, //选择题出题数量\r\n      fillNumber: null, //填空题出题数量\r\n      judgeNumber: null, //判断题出题数量\r\n      activeName: '',  //活动选项卡\r\n      options: [ //题库类型\r\n        {\r\n          value: '选择题',\r\n          label: '选择题'\r\n        },\r\n        {\r\n          value: '填空题',\r\n          label: '填空题'\r\n        },\r\n        {\r\n          value: '判断题',\r\n          label: '判断题'\r\n        },\r\n      ],\r\n      difficulty: [ //试题难度\r\n        {\r\n          value: '简单',\r\n          label: '简单'\r\n        },\r\n        {\r\n          value: '一般',\r\n          label: '一般'\r\n        },\r\n        {\r\n          value: '困难',\r\n          label: '困难'\r\n        }\r\n      ],\r\n      difficultyValue: '简单',\r\n      levels: [ //难度等级\r\n        {\r\n          value: '1',\r\n          label: '1'\r\n        },\r\n        {\r\n          value: '2',\r\n          label: '2'\r\n        },\r\n        {\r\n          value: '3',\r\n          label: '3'\r\n        },\r\n        {\r\n          value: '4',\r\n          label: '4'\r\n        },\r\n        {\r\n          value: '5',\r\n          label: '5'\r\n        },\r\n      ],\r\n      rights: [ //正确答案\r\n        {\r\n          value: 'A',\r\n          label: 'A'\r\n        },\r\n        {\r\n          value: 'B',\r\n          label: 'B'\r\n        },\r\n        {\r\n          value: 'C',\r\n          label: 'C'\r\n        },\r\n        {\r\n          value: 'D',\r\n          label: 'D'\r\n        },\r\n      ],\r\n      paperId: null,\r\n      optionValue: '选择题', //题型选中值\r\n      subject: '', //试卷名称用来接收路由参数\r\n      postChange: { //选择题提交内容\r\n        subject: '', //试卷名称\r\n        level: '', //难度等级选中值\r\n        rightAnswer: '', //正确答案选中值\r\n        section: '', //对应章节\r\n        question: '', //题目\r\n        analysis: '', //解析\r\n        answerA: '',\r\n        answerB: '',\r\n        answerC: '',\r\n        answerD: '',\r\n      },\r\n      postFill: { //填空题提交内容\r\n        subject: '', //试卷名称\r\n        level: '', //难度等级选中值\r\n        answer: '', //正确答案\r\n        section: '', //对应章节\r\n        question: '', //题目\r\n        analysis: '', //解析\r\n      },\r\n      postJudge: { //判断题提交内容\r\n        subject: '', //试卷名称\r\n        level: '', //难度等级选中值\r\n        answer: '', //正确答案\r\n        section: '', //对应章节\r\n        question: '', //题目\r\n        analysis: '', //解析\r\n      },\r\n      postPaper: { //考试管理表对应字段\r\n        paperId: null,\r\n        questionType: null, // 试卷类型 1--选择题  2--填空题   3--判断题\r\n        questionId: null,\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.getParams()\r\n  },\r\n  methods: {\r\n    // handleClick(tab, event) {\r\n    //   console.log(tab, event);\r\n    // },\r\n    create() {\r\n      request.post(\"/item\", {\r\n        changeNumber: this.changeNumber,\r\n        fillNumber: this.fillNumber,\r\n        judgeNumber: this.judgeNumber,\r\n        paperId: this.postPaper.paperId,\r\n        subject: '计算机网络' //题目数量太少，指定为计算机网络出题\r\n      }).then(res => {\r\n        console.log(res)\r\n        if(res.code=='0'){\r\n          setTimeout(() => {\r\n            this.$router.push({path:'/paperManage',query: {paperId: this.postPaper.paperId}})\r\n            // this.$router.push({path: '/paperManage'})\r\n          },1000)\r\n          this.$message({\r\n            type:\"success\",\r\n            message:\"组卷成功\"\r\n          })\r\n        }else if(res.code==\"0000\"){\r\n          this.$message({\r\n            message: '组卷失败',\r\n            type: 'error'\r\n          })\r\n        }\r\n\r\n      })\r\n    },\r\n    getParams() {\r\n      let subject = this.$route.query.subject //获取试卷名称\r\n      let paperId = this.$route.query.paperId //获取paperId\r\n      this.activeName = this.$route.query.tabs\r\n      this.paperId = paperId\r\n      this.subject = subject\r\n      this.postPaper.paperId = paperId\r\n    },\r\n    changeSubmit() { //选择题题库提交\r\n      this.postChange.subject = this.subject\r\n      request.post(\"/multiQuestion\",{ ...this.postPaper}).then(res => { //添加成功显示提示\r\n        let status = res.code\r\n        if(status == '0') {\r\n          this.$message({\r\n            message: '已添加到题库',\r\n            type: 'success'\r\n          })\r\n          this.postChange = {}\r\n        }\r\n      }).then(() => {\r\n        request.post(\"/multiQuestion/new\").then(res => { //获取当前题目的questionId\r\n          let questionId = res.data.data.questionId\r\n          this.postPaper.questionId = questionId\r\n          this.postPaper.questionType = 1\r\n          request.post(\"/paperManage\",{ ...this.postPaper})\r\n        })\r\n      })\r\n    },\r\n    fillSubmit() { //填空题提交\r\n      this.postFill.subject = this.subject\r\n      request.post(\"/fillQuestion\",{ ...this.postPaper}).then(res => {\r\n        let status = res.code\r\n        if(status == '0') {\r\n          this.$message({\r\n            message: '已添加到题库',\r\n            type: 'success'\r\n          })\r\n          this.postFill = {}\r\n        }\r\n      }).then(() => {\r\n        request.get(\"/fillQuestion/new\").then(res => { //获取当前题目的questionId\r\n          let questionId = res.data.data.questionId\r\n          this.postPaper.questionId = questionId\r\n          this.postPaper.questionType = 2\r\n          request.post(\"/paperManage\",{ ...this.postPaper})\r\n        })\r\n      })\r\n    },\r\n    judgeSubmit() { //判断题提交\r\n      this.postJudge.subject = this.subject\r\n      request.post(\"/judgeQuestion\",{ ...this.postPaper}).then(res => {\r\n        let status = res.code\r\n        if(status == '0') {\r\n          this.$message({\r\n            message: '已添加到题库',\r\n            type: 'success'\r\n          })\r\n          this.postJudge = {}\r\n        }\r\n      }).then(() => {\r\n        request.get(\"/judgeQuestion/new\").then(res => { //获取当前题目的questionId\r\n          let questionId = res.data.records.questionId\r\n          this.postPaper.questionId = questionId\r\n          this.postPaper.questionType = 3\r\n          request.post(\"/paperManage\",{ ...this.postPaper})\r\n        })\r\n      })\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tabs{\r\n  padding: 12px;\r\n}\r\n.add {\r\n  margin: 5px 80px;\r\n  .box {\r\n    padding: 0px 20px;\r\n    ul li {\r\n      margin: 10px 0px;\r\n      display: flex;\r\n      align-items: center;\r\n      .el-input {\r\n        width: 6%;\r\n      }\r\n      .w150 {\r\n        margin-left: 20px;\r\n        width: 7%;\r\n      }\r\n    }\r\n  }\r\n  .el-icon-circle-plus {\r\n    margin-right: 10px;\r\n    vertical-align: middle;\r\n  }\r\n  .icon-daoru-tianchong {\r\n    margin-right: 10px;\r\n    vertical-align: middle;\r\n  }\r\n  .append {\r\n    margin: 0px 20px;\r\n    ul {\r\n      display: flex;\r\n      align-items: center;\r\n      li {\r\n        margin-right: 20px;\r\n      }\r\n    }\r\n    .change {\r\n      margin-top: 20px;\r\n      padding: 20px 16px;\r\n      background-color: #E7F6F6;\r\n      border-radius: 4px;\r\n      .title {\r\n        padding-left: 6px;\r\n        color: #2f4f4f;\r\n        span:nth-child(1) {\r\n          margin-right: 6px;\r\n        }\r\n        .answer {\r\n          margin: 20px 0px 20px 8px;\r\n        }\r\n        .el-textarea {\r\n          width: 98% !important;\r\n        }\r\n      }\r\n      .options {\r\n        ul {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        ul li {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          width: 98%;\r\n          margin: 10px 0px;\r\n          span {\r\n            margin-right: 20px;\r\n          }\r\n        }\r\n      }\r\n      .submit {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n    }\r\n    .fill {\r\n      .fillAnswer {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        span {\r\n          margin-right: 6px;\r\n        }\r\n        .el-input {\r\n          width: 91% !important;\r\n        }\r\n      }\r\n      .analysis {\r\n        margin-top: 20px;\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n    .judge {\r\n      .judgeAnswer {\r\n        margin-left: 20px;\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n    .w150 {\r\n      width: 150px;\r\n    }\r\n    li:nth-child(2) {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
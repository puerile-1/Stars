{"ast":null,"code":"import { UserFilled, Lock } from \"@element-plus/icons\";\nimport request from \"@/utils/request\";\nimport { ref } from 'vue';\nexport default {\n  name: \"Login\",\n  components: {\n    UserFilled,\n    Lock\n  },\n\n  data() {\n    return {\n      form: {},\n      value: ref(''),\n      options: [{\n        value: 'student',\n        label: '学生'\n      }, {\n        value: 'teacher',\n        label: '教师'\n      }, {\n        value: 'admin',\n        label: '管理员'\n      }],\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    login() {\n      //只有输入才会发出登录请求\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          //管理员登录\n          if (this.value === 'admin') {\n            request.post(\"/admin/login\", this.form).then(res => {\n              if (res.code === '0') {\n                this.$message({\n                  type: \"success\",\n                  message: \"登录成功\"\n                });\n                console.log(res.data);\n                this.$cookies.set(\"data\", res.data);\n                this.$cookies.set(\"name\", \"Stars\");\n                this.$router.push(\"/admin\"); //登录成功之后进行页面跳转，跳转到主页\n              } else {\n                this.$message({\n                  type: \"error\",\n                  message: res.msg\n                });\n              }\n            });\n          } //教师登录\n\n\n          if (this.value === 'teacher') {\n            request.post(\"/teacher/login\", this.form).then(res => {\n              if (res.code === '0') {\n                this.$message({\n                  type: \"success\",\n                  message: \"登录成功\"\n                });\n                console.log(res.data);\n                this.$cookies.set(\"data\", res.data);\n                this.$cookies.set(\"name\", \"Stars\");\n                this.$router.push(\"/teacher\"); //登录成功之后进行页面跳转，跳转到主页\n              } else {\n                this.$message({\n                  type: \"error\",\n                  message: res.msg\n                });\n              }\n            });\n          } //学生登录\n\n\n          if (this.value === 'student') {\n            request.post(\"/student/login\", this.form).then(res => {\n              if (res.code === '0') {\n                this.$message({\n                  type: \"success\",\n                  message: \"登录成功\"\n                });\n                this.$cookies.set(\"data\", res.data);\n                sessionStorage.setItem(\"user\", JSON.stringify(res.data));\n                this.$router.push(\"/studentIndex\"); //登录成功之后进行页面跳转，跳转到主页\n              } else {\n                this.$message({\n                  type: \"error\",\n                  message: res.msg\n                });\n              }\n            });\n          }\n        }\n      });\n    },\n\n    register() {\n      this.$router.push(\"/register\"); //登录成功之后进行页面跳转，跳转到主页\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoDA,SAAQA,UAAR,EAAmBC,IAAnB,QAA8B,qBAA9B;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,GAAT,QAAoB,KAApB;AACA,eAAe;AACbC,MAAI,EAAE,OADO;AAEbC,YAAU,EAAE;AACVL,cADU;AAEVC;AAFU,GAFC;;AAMbK,MAAI,GAAE;AACJ,WAAM;AACJC,UAAI,EAAC,EADD;AAEJC,WAAK,EAACL,GAAG,CAAC,EAAD,CAFL;AAGJM,aAAO,EAAC,CACN;AACED,aAAK,EAAE,SADT;AAEEE,aAAK,EAAE;AAFT,OADM,EAKN;AACEF,aAAK,EAAE,SADT;AAEEE,aAAK,EAAE;AAFT,OALM,EASN;AACEF,aAAK,EAAE,OADT;AAEEE,aAAK,EAAE;AAFT,OATM,CAHJ;AAiBJC,WAAK,EAAC;AACJC,gBAAQ,EAAE,CACR;AAAEC,kBAAQ,EAAE,IAAZ;AAAkBC,iBAAO,EAAE,OAA3B;AAAoCC,iBAAO,EAAE;AAA7C,SADQ,CADN;AAIJC,gBAAQ,EAAC,CACP;AAAEH,kBAAQ,EAAE,IAAZ;AAAkBC,iBAAO,EAAE,OAA3B;AAAoCC,iBAAO,EAAE;AAA7C,SADO;AAJL;AAjBF,KAAN;AA0BD,GAjCY;;AAkCbE,SAAO,EAAE;AACPC,SAAK,GAAE;AACL;AACA,WAAKC,KAAL,CAAW,MAAX,EAAmBC,QAAnB,CAA6BC,KAAD,IAAW;AACrC,YAAIA,KAAJ,EAAW;AACT;AACA,cAAG,KAAKb,KAAL,KAAe,OAAlB,EAA0B;AACxBN,mBAAO,CAACoB,IAAR,CAAa,cAAb,EAA6B,KAAKf,IAAlC,EAAwCgB,IAAxC,CAA6CC,GAAE,IAAK;AAClD,kBAAIA,GAAG,CAACC,IAAJ,KAAa,GAAjB,EAAsB;AACpB,qBAAKC,QAAL,CAAc;AACZC,sBAAI,EAAE,SADM;AAEZb,yBAAO,EAAE;AAFG,iBAAd;AAIAc,uBAAO,CAACC,GAAR,CAAYL,GAAG,CAAClB,IAAhB;AACA,qBAAKwB,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAAyBP,GAAG,CAAClB,IAA7B;AACA,qBAAKwB,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAAyB,OAAzB;AACA,qBAAKC,OAAL,CAAaC,IAAb,CAAkB,QAAlB,EARoB,CAQO;AAC7B,eATA,MASO;AACL,qBAAKP,QAAL,CAAc;AACZC,sBAAI,EAAE,OADM;AAEZb,yBAAO,EAAEU,GAAG,CAACU;AAFD,iBAAd;AAIF;AACD,aAhBD;AAiBF,WApBS,CAqBT;;;AACA,cAAG,KAAK1B,KAAL,KAAe,SAAlB,EAA4B;AAC1BN,mBAAO,CAACoB,IAAR,CAAa,gBAAb,EAA+B,KAAKf,IAApC,EAA0CgB,IAA1C,CAA+CC,GAAE,IAAK;AACpD,kBAAIA,GAAG,CAACC,IAAJ,KAAa,GAAjB,EAAsB;AACpB,qBAAKC,QAAL,CAAc;AACZC,sBAAI,EAAE,SADM;AAEZb,yBAAO,EAAE;AAFG,iBAAd;AAIAc,uBAAO,CAACC,GAAR,CAAYL,GAAG,CAAClB,IAAhB;AACA,qBAAKwB,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAAyBP,GAAG,CAAClB,IAA7B;AACA,qBAAKwB,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAAyB,OAAzB;AACA,qBAAKC,OAAL,CAAaC,IAAb,CAAkB,UAAlB,EARoB,CAQS;AAC/B,eATA,MASO;AACL,qBAAKP,QAAL,CAAc;AACZC,sBAAI,EAAE,OADM;AAEZb,yBAAO,EAAEU,GAAG,CAACU;AAFD,iBAAd;AAIF;AACD,aAhBD;AAiBF,WAxCS,CAyCT;;;AACA,cAAG,KAAK1B,KAAL,KAAe,SAAlB,EAA4B;AAC1BN,mBAAO,CAACoB,IAAR,CAAa,gBAAb,EAA+B,KAAKf,IAApC,EAA0CgB,IAA1C,CAA+CC,GAAE,IAAK;AACpD,kBAAIA,GAAG,CAACC,IAAJ,KAAa,GAAjB,EAAsB;AACpB,qBAAKC,QAAL,CAAc;AACZC,sBAAI,EAAE,SADM;AAEZb,yBAAO,EAAE;AAFG,iBAAd;AAIA,qBAAKgB,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAAyBP,GAAG,CAAClB,IAA7B;AACA6B,8BAAc,CAACC,OAAf,CAAuB,MAAvB,EAA8BC,IAAI,CAACC,SAAL,CAAed,GAAG,CAAClB,IAAnB,CAA9B;AACA,qBAAK0B,OAAL,CAAaC,IAAb,CAAkB,eAAlB,EAPoB,CAOc;AACpC,eARA,MAQO;AACL,qBAAKP,QAAL,CAAc;AACZC,sBAAI,EAAE,OADM;AAEZb,yBAAO,EAAEU,GAAG,CAACU;AAFD,iBAAd;AAIF;AACD,aAfD;AAgBF;AAEF;AACD,OA/DD;AAgED,KAnEM;;AAoEPK,YAAQ,GAAE;AACR,WAAKP,OAAL,CAAaC,IAAb,CAAkB,WAAlB,EADQ,CACsB;AAChC;;AAtEO;AAlCI,CAAf","names":["UserFilled","Lock","request","ref","name","components","data","form","value","options","label","rules","username","required","message","trigger","password","methods","login","$refs","validate","valid","post","then","res","code","$message","type","console","log","$cookies","set","$router","push","msg","sessionStorage","setItem","JSON","stringify","register"],"sourceRoot":"","sources":["F:\\21-22-2\\大三短学期\\大作业\\Spring-Vue-Exam-Pure-main\\Spring-Vue-Exam-Pure-main\\vue\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div v-wechat-title=\"$route.meta.title\"  style=\"width: 100%; height: 100vh; overflow: hidden\" class=\"background\">\r\n    <div style=\"width: 300px; margin: 200px auto\">\r\n      <div style=\"color: black; font-size: 34px; text-align: center; padding: 20px 0\">欢迎登录\r\n        <br>\r\n        Stars 在线考试系统\r\n      </div>\r\n      <el-form ref=\"form\" :model=\"form\" size=\"large\" :rules=\"rules\" >\r\n        <!--        输入用户名-->\r\n        <el-form-item prop=\"username\" >\r\n          账号\r\n          <el-input  v-model=\"form.username\" >\r\n            <template #prefix>\r\n              <el-icon class=\"el-input__icon\"><user-filled /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <!--        输入密码-->\r\n        <el-form-item prop=\"password\">\r\n          密码\r\n          <el-input v-model=\"form.password\" show-password>\r\n            <template #prefix>\r\n              <el-icon class=\"el-input__icon\"><lock /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <!--        用户类型选择-->\r\n        <el-form-item prop=\"userType\">\r\n          <el-select v-model=\"value\"  placeholder=\"用户类型\" style=\"margin-left: 40px; font-size: 16px\">\r\n            <el-option\r\n                v-for=\"item in options\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!--        登录按钮-->\r\n        <el-form-item>\r\n          <el-button style=\"width: 50%; color: dodgerblue; margin: 0 auto; font-size: 16px\" @click=\"login\">登录</el-button>\r\n        </el-form-item>\r\n        <!--        注册按钮-->\r\n        <el-form-item>\r\n          <el-button style=\"width: 50%; color: dodgerblue; margin: 0 auto ;font-size: 16px \" @click=\"register\">注册</el-button>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {UserFilled,Lock} from \"@element-plus/icons\";\r\n\r\nimport request from \"@/utils/request\";\r\nimport { ref } from 'vue'\r\nexport default {\r\n  name: \"Login\",\r\n  components: {\r\n    UserFilled,\r\n    Lock\r\n  },\r\n  data(){\r\n    return{\r\n      form:{},\r\n      value:ref('') ,\r\n      options:[\r\n        {\r\n          value: 'student',\r\n          label: '学生',\r\n        },\r\n        {\r\n          value: 'teacher',\r\n          label: '教师',\r\n        },\r\n        {\r\n          value: 'admin',\r\n          label: '管理员',\r\n        }\r\n      ],\r\n      rules:{\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' }\r\n        ],\r\n        password:[\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    login(){\r\n      //只有输入才会发出登录请求\r\n      this.$refs['form'].validate((valid) => {\r\n        if (valid) {\r\n          //管理员登录\r\n          if(this.value === 'admin'){\r\n            request.post(\"/admin/login\", this.form).then(res => {\r\n              if (res.code === '0') {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"登录成功\"\r\n                })\r\n                console.log(res.data)\r\n                this.$cookies.set(\"data\",res.data)\r\n                this.$cookies.set(\"name\",\"Stars\")\r\n                this.$router.push(\"/admin\")//登录成功之后进行页面跳转，跳转到主页\r\n              } else {\r\n                this.$message({\r\n                  type: \"error\",\r\n                  message: res.msg\r\n                })\r\n              }\r\n            })\r\n          }\r\n          //教师登录\r\n          if(this.value === 'teacher'){\r\n            request.post(\"/teacher/login\", this.form).then(res => {\r\n              if (res.code === '0') {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"登录成功\"\r\n                })\r\n                console.log(res.data)\r\n                this.$cookies.set(\"data\",res.data)\r\n                this.$cookies.set(\"name\",\"Stars\")\r\n                this.$router.push(\"/teacher\")//登录成功之后进行页面跳转，跳转到主页\r\n              } else {\r\n                this.$message({\r\n                  type: \"error\",\r\n                  message: res.msg\r\n                })\r\n              }\r\n            })\r\n          }\r\n          //学生登录\r\n          if(this.value === 'student'){\r\n            request.post(\"/student/login\", this.form).then(res => {\r\n              if (res.code === '0') {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"登录成功\"\r\n                })\r\n                this.$cookies.set(\"data\",res.data)\r\n                sessionStorage.setItem(\"user\",JSON.stringify(res.data))\r\n                this.$router.push(\"/studentIndex\")//登录成功之后进行页面跳转，跳转到主页\r\n              } else {\r\n                this.$message({\r\n                  type: \"error\",\r\n                  message: res.msg\r\n                })\r\n              }\r\n            })\r\n          }\r\n\r\n        }\r\n      })\r\n    },\r\n    register(){\r\n      this.$router.push(\"/register\")//登录成功之后进行页面跳转，跳转到主页\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.background{\r\n  width:100%;\r\n  height:100%;  /**宽高100%是为了图片铺满屏幕 */\r\n  background: url('../assets/img/yun.jpg') center center ;\r\n  z-index:-1;\r\n  position: absolute;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}
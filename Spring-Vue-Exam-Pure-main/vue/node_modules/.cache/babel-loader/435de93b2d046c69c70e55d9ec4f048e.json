{"ast":null,"code":"import { UserFilled, Lock } from \"@element-plus/icons\";\nimport request from \"@/utils/request\";\nimport ElNotification from \"element-plus\";\nimport { h } from \"@vue/runtime-core\";\nexport default {\n  name: \"Register\",\n  components: {\n    UserFilled,\n    Lock\n  },\n\n  data() {\n    return {\n      form: {},\n      rules: {\n        studentName: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        pwd: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        confirm: [{\n          required: true,\n          message: '请确认密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    tips(data) {\n      this.$notify({\n        title: '提示',\n        message: h('i', {\n          style: 'color: teal'\n        }, '给您自动分配地登录账号为 ：' + data.studentId),\n        duration: 0\n      });\n    },\n\n    back() {\n      this.$router.push(\"/login\"); //登录成功之后进行页面跳转，跳转到主页\n    },\n\n    register() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.pwd !== this.form.confirm) {\n            this.$message({\n              type: \"error\",\n              message: \"两次输入的密码不一致！\"\n            });\n            return;\n          }\n\n          console.log(delete this.form.confirm);\n          console.log(this.form);\n          request.post(\"/student/register\", this.form).then(res => {\n            if (res.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"注册成功\"\n              });\n              console.log(res);\n              this.tips(res.data);\n              this.$router.push(\"/login\"); //登录成功之后进行页面跳转，跳转到主页\n            } else {\n              this.$message({\n                type: \"error\",\n                message: res.msg\n              });\n            }\n          });\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsDA,SAAQA,UAAR,EAAmBC,IAAnB,QAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,cAAP,MAA2B,cAA3B;AACA,SAAQC,CAAR,QAAgB,mBAAhB;AAEA,eAAe;AACbC,MAAI,EAAE,UADO;AAEbC,YAAU,EAAE;AACVN,cADU;AAEVC;AAFU,GAFC;;AAMbM,MAAI,GAAE;AACJ,WAAM;AACJC,UAAI,EAAC,EADD;AAEJC,WAAK,EAAC;AACJC,mBAAW,EAAE,CACX;AAAEC,kBAAQ,EAAE,IAAZ;AAAkBC,iBAAO,EAAE,QAA3B;AAAqCC,iBAAO,EAAE;AAA9C,SADW,CADT;AAIJC,WAAG,EAAC,CACF;AAAEH,kBAAQ,EAAE,IAAZ;AAAkBC,iBAAO,EAAE,OAA3B;AAAoCC,iBAAO,EAAE;AAA7C,SADE,CAJA;AAOJE,eAAO,EAAC,CACN;AAAEJ,kBAAQ,EAAE,IAAZ;AAAkBC,iBAAO,EAAE,OAA3B;AAAoCC,iBAAO,EAAE;AAA7C,SADM;AAPJ;AAFF,KAAN;AAcD,GArBY;;AAsBbG,SAAO,EAAE;AACPC,QAAI,CAACV,IAAD,EAAM;AACR,WAAKW,OAAL,CAAa;AACXC,aAAK,EAAE,IADI;AAEXP,eAAO,EAAER,CAAC,CACN,GADM,EAEN;AAAEgB,eAAK,EAAE;AAAT,SAFM,EAGN,mBAAiBb,IAAI,CAACc,SAHhB,CAFC;AAOXC,gBAAQ,EAAE;AAPC,OAAb;AASD,KAXM;;AAYPC,QAAI,GAAE;AACJ,WAAKC,OAAL,CAAaC,IAAb,CAAkB,QAAlB,EADI,CACuB;AAC5B,KAdM;;AAePC,YAAQ,GAAE;AACR,WAAKC,KAAL,CAAW,MAAX,EAAmBC,QAAnB,CAA6BC,KAAD,IAAW;AACrC,YAAIA,KAAJ,EAAW;AACT,cAAG,KAAKrB,IAAL,CAAUM,GAAV,KAAkB,KAAKN,IAAL,CAAUO,OAA/B,EAAuC;AACrC,iBAAKe,QAAL,CAAc;AACZC,kBAAI,EAAC,OADO;AAEZnB,qBAAO,EAAC;AAFI,aAAd;AAIA;AACF;;AACAoB,iBAAO,CAACC,GAAR,CAAY,OAAO,KAAKzB,IAAL,CAAUO,OAA7B;AACAiB,iBAAO,CAACC,GAAR,CAAY,KAAKzB,IAAjB;AACAN,iBAAO,CAACgC,IAAR,CAAa,mBAAb,EAAiC,KAAK1B,IAAtC,EAA4C2B,IAA5C,CAAiDC,GAAE,IAAK;AACtD,gBAAGA,GAAG,CAACC,IAAJ,KAAa,GAAhB,EAAoB;AAClB,mBAAKP,QAAL,CAAc;AACZC,oBAAI,EAAC,SADO;AAEZnB,uBAAO,EAAC;AAFI,eAAd;AAIAoB,qBAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,mBAAKnB,IAAL,CAAUmB,GAAG,CAAC7B,IAAd;AACA,mBAAKiB,OAAL,CAAaC,IAAb,CAAkB,QAAlB,EAPkB,CAOS;AAC5B,aARD,MAQK;AACH,mBAAKK,QAAL,CAAc;AACZC,oBAAI,EAAC,OADO;AAEZnB,uBAAO,EAACwB,GAAG,CAACE;AAFA,eAAd;AAIF;AACD,WAfD;AAgBF;AACD,OA5BD;AA6BF;;AA7CO;AAtBI,CAAf","names":["UserFilled","Lock","request","ElNotification","h","name","components","data","form","rules","studentName","required","message","trigger","pwd","confirm","methods","tips","$notify","title","style","studentId","duration","back","$router","push","register","$refs","validate","valid","$message","type","console","log","post","then","res","code","msg"],"sourceRoot":"","sources":["F:\\21-22-2\\大三短学期\\大作业\\Spring-Vue-Exam-Pure-main\\Spring-Vue-Exam-Pure-main\\vue\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n  <div v-wechat-title=\"$route.meta.title\" style=\"width: 100%; height: 100vh; overflow: hidden\" class=\"background\" >\r\n    <div style=\"width: 300px; margin: 150px auto\">\r\n      <div style=\"color: grey; font-size: 30px; text-align: center; padding: 30px 0 \">欢迎注册</div>\r\n      <el-form ref=\"form\" :model=\"form\" size=\"large\" :rules=\"rules\">\r\n        <!--        输入用户名-->\r\n        <el-form-item prop=\"studentName\">\r\n          用户名\r\n          <el-input  v-model=\"form.studentName\" >\r\n            <template #prefix>\r\n              <el-icon class=\"el-input__icon\"><user-filled /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <!--        输入密码-->\r\n        <el-form-item prop=\"pwd\">\r\n          密码\r\n          <el-input v-model=\"form.pwd\" show-password>\r\n            <template #prefix>\r\n              <el-icon class=\"el-input__icon\"><lock /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"confirm\">\r\n          确认密码\r\n          <el-input v-model=\"form.confirm\" show-password>\r\n            <template #prefix>\r\n              <el-icon class=\"el-input__icon\"><lock /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n<!--        <el-form-item >-->\r\n<!--          <el-select v-model=\"value\"  placeholder=\"用户类型\" style=\"margin-left: 40px;\">-->\r\n<!--            <el-option-->\r\n<!--                v-for=\"item in options\"-->\r\n<!--                :key=\"item.value\"-->\r\n<!--                :label=\"item.label\"-->\r\n<!--                :value=\"item.value\"/>-->\r\n<!--          </el-select>-->\r\n<!--        </el-form-item>-->\r\n        <!--        登录按钮-->\r\n        <el-form-item>\r\n          <el-button style=\"width: 50%; color: dodgerblue; font-size:16px;margin: 0 auto\" @click=\"register\">注册</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button style=\"width: 50%; color: dodgerblue;font-size:16px; margin: 0 auto\" @click=\"back\">返回登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {UserFilled,Lock} from \"@element-plus/icons\";\r\nimport request from \"@/utils/request\";\r\nimport ElNotification from \"element-plus\";\r\nimport {h} from \"@vue/runtime-core\";\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  components: {\r\n    UserFilled,\r\n    Lock\r\n  },\r\n  data(){\r\n    return{\r\n      form:{},\r\n      rules:{\r\n        studentName: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        pwd:[\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ],\r\n        confirm:[\r\n          { required: true, message: '请确认密码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    tips(data){\r\n      this.$notify({\r\n        title: '提示',\r\n        message: h(\r\n            'i',\r\n            { style: 'color: teal' },\r\n            '给您自动分配地登录账号为 ：'+data.studentId\r\n        ),\r\n        duration: 0,\r\n      })\r\n    },\r\n    back(){\r\n      this.$router.push(\"/login\")//登录成功之后进行页面跳转，跳转到主页\r\n    },\r\n    register(){\r\n      this.$refs['form'].validate((valid) => {\r\n        if (valid) {\r\n          if(this.form.pwd !== this.form.confirm){\r\n            this.$message({\r\n              type:\"error\",\r\n              message:\"两次输入的密码不一致！\"\r\n            })\r\n            return\r\n          }\r\n          console.log(delete this.form.confirm)\r\n          console.log(this.form)\r\n          request.post(\"/student/register\",this.form).then(res => {\r\n            if(res.code === '0'){\r\n              this.$message({\r\n                type:\"success\",\r\n                message:\"注册成功\"\r\n              })\r\n              console.log(res)\r\n              this.tips(res.data)\r\n              this.$router.push(\"/login\")//登录成功之后进行页面跳转，跳转到主页\r\n            }else{\r\n              this.$message({\r\n                type:\"error\",\r\n                message:res.msg\r\n              })\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.background{\r\n  width:100%;\r\n  height:100%;  /**宽高100%是为了图片铺满屏幕 */\r\n  background: url('../assets/img/flower.jpg') center center ;\r\n  z-index:-1;\r\n  position: absolute;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      search: '',\n      currentPage4: 1,\n      pageSize4: 10,\n      total: 0,\n      dialogVisible: false,\n      form: {},\n      tableData: []\n    };\n  },\n\n  created() {\n    this.load();\n    this.loading = true; //数据加载则遮罩表格\n  },\n\n  methods: {\n    load() {\n      let studentId = this.$cookies.get(\"data\").studentId;\n      request.get(\"/score/\" + studentId, {\n        params: {\n          pageNum: this.currentPage4,\n          pageSize: this.pageSize4\n        }\n      }).then(res => {\n        console.log(res);\n\n        if (res.code == '0') {\n          this.tableData = res.data.records;\n          this.total = res.data.total;\n          this.loading = false; //数据加载完成去掉遮罩\n          //\n          // this.score = res.data.records[0].etScore\n          // this.pagination = {...res.data.records[0]}\n          // let mapVal = this.score.map((element,index) => { //通过map得到 filter:[{text,value}]形式的数组对象\n          //   let newVal = {}\n          //   newVal.text = element.answerDate\n          //   newVal.value = element.answerDate\n          //   return newVal\n          // })\n          // let hash = []\n          // const newArr = mapVal.reduce((item, next) => { //对新对象进行去重操作\n          //   hash[next.text] ? '' : hash[next.text] = true && item.push(next);\n          //   return item\n          // }, []);\n          // this.filter = newArr\n        }\n      });\n    },\n\n    handleSizeChange(pageSize) {\n      //改变当前每页的个数\n      this.pageSize4 = pageSize;\n      this.load();\n    },\n\n    handleCurrentChange(pageNum) {\n      //改变当前页码\n      this.currentPage4 = pageNum;\n      this.load();\n    },\n\n    formatter(row, column) {\n      return row.address;\n    },\n\n    filterTag(value, row) {\n      return row.tag === value;\n    },\n\n    filterHandler(value, row, column) {\n      const property = column[\"property\"];\n      return row[property] === value;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuDA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,YAAM,EAAE,EADH;AAELC,kBAAY,EAAE,CAFT;AAGLC,eAAS,EAAE,EAHN;AAILC,WAAK,EAAE,CAJF;AAKLC,mBAAa,EAAC,KALT;AAMLC,UAAI,EAAC,EANA;AAOLC,eAAS,EAAE;AAPN,KAAP;AASD,GAXY;;AAYbC,SAAO,GAAG;AACR,SAAKC,IAAL;AACA,SAAKC,OAAL,GAAe,IAAf,CAFQ,CAEY;AACrB,GAfY;;AAgBbC,SAAO,EAAE;AACPF,QAAI,GAAG;AACL,UAAIG,SAAQ,GAAI,KAAKC,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0BF,SAA1C;AACAb,aAAO,CAACe,GAAR,CAAY,YAAUF,SAAtB,EAAgC;AAC9BG,cAAM,EAAC;AACLC,iBAAO,EAAC,KAAKd,YADR;AAELe,kBAAQ,EAAC,KAAKd;AAFT;AADuB,OAAhC,EAKGe,IALH,CAKQC,GAAE,IAAK;AACbC,eAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAGA,GAAG,CAACG,IAAJ,IAAY,GAAf,EAAoB;AAClB,eAAKf,SAAL,GAAiBY,GAAG,CAACnB,IAAJ,CAASuB,OAA1B;AACA,eAAKnB,KAAL,GAAae,GAAG,CAACnB,IAAJ,CAASI,KAAtB;AACA,eAAKM,OAAL,GAAe,KAAf,CAHkB,CAGG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACD,OA3BD;AA4BD,KA/BM;;AAgCPc,oBAAgB,CAACP,QAAD,EAAW;AAAC;AAC1B,WAAKd,SAAL,GAAiBc,QAAjB;AACA,WAAKR,IAAL;AACD,KAnCM;;AAoCPgB,uBAAmB,CAACT,OAAD,EAAU;AAAC;AAC5B,WAAKd,YAAL,GAAoBc,OAApB;AACA,WAAKP,IAAL;AACD,KAvCM;;AAwCPiB,aAAS,CAACC,GAAD,EAAMC,MAAN,EAAc;AACrB,aAAOD,GAAG,CAACE,OAAX;AACD,KA1CM;;AA2CPC,aAAS,CAACC,KAAD,EAAQJ,GAAR,EAAa;AACpB,aAAOA,GAAG,CAACK,GAAJ,KAAYD,KAAnB;AACD,KA7CM;;AA8CPE,iBAAa,CAACF,KAAD,EAAQJ,GAAR,EAAaC,MAAb,EAAqB;AAChC,YAAMM,QAAO,GAAIN,MAAM,CAAC,UAAD,CAAvB;AACA,aAAOD,GAAG,CAACO,QAAD,CAAH,KAAkBH,KAAzB;AACF;;AAjDO;AAhBI,CAAf","names":["request","data","search","currentPage4","pageSize4","total","dialogVisible","form","tableData","created","load","loading","methods","studentId","$cookies","get","params","pageNum","pageSize","then","res","console","log","code","records","handleSizeChange","handleCurrentChange","formatter","row","column","address","filterTag","value","tag","filterHandler","property"],"sourceRoot":"","sources":["F:\\21-22-2\\大三短学期\\大作业\\Spring-Vue-Exam-Pure-main\\Spring-Vue-Exam-Pure-main\\vue\\src\\components\\student\\scoreTable.vue"],"sourcesContent":["//显示学生成绩\n<template>\n  <div v-wechat-title=\"$route.meta.title\" class=\"table\">\n    <p class=\"title\">我的分数</p>\n    <!--表格-->\n    <el-table\n        :data=\"tableData\"\n        stripe\n        height=\"600\"\n        style=\"width: 100%; text-align: center\"\n        border>\n      <el-table-column prop=\"subject\" label=\"考试科目\" ></el-table-column>\n      <el-table-column prop=\"answerDate\" label=\"考试日期\" sortable></el-table-column>\n      <el-table-column prop=\"etScore\" label=\"分数\" ></el-table-column>\n      <el-table-column label=\"是否及格\" >\n<!--        <el-tag :type=\"tableData.etScore>= 60 ? 'success' : 'danger'\">{{tableData.etScore >= 60 ? \"及格\" : \"不及格\"}}</el-tag>-->\n        <template #default=\"scope\">\n          <el-tag\n              :type=\"scope.row.etScore >= 60 ? 'success' : 'danger'\"\n              disable-transitions\n          >{{ scope.row.etScore >= 60 ? \"及格\" : \"不及格\"}}</el-tag\n          >\n        </template>\n      </el-table-column>\n      <!--      -->\n      <!--      <el-table-column label=\"操作\">-->\n      <!--        <template #default=\"scope\">-->\n      <!--          <el-button @click=\"handleEdit(scope.row)\">编辑</el-button>-->\n      <!--          <el-popconfirm title=\"确认删除?\" @confirm=\"handleDelete(scope.row.id)\">-->\n      <!--            <template #reference>-->\n      <!--              <el-button type=\"danger\">删除</el-button>-->\n      <!--            </template>-->\n      <!--          </el-popconfirm>-->\n      <!--        </template>-->\n      <!--      </el-table-column>-->\n    </el-table>\n\n    <div style=\"margin: 10px 0\">\n      <!--      分页-->\n      <el-pagination\n          v-model:currentPage=\"currentPage4\"\n          v-model:page-size=\"pageSize4\"\n          :page-sizes=\"[5, 10, 15, 20]\"\n          :small=\"small\"\n          :disabled=\"disabled\"\n          :background=\"background\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  data() {\n    return {\n      search: '',\n      currentPage4: 1,\n      pageSize4: 10,\n      total: 0,\n      dialogVisible:false,\n      form:{},\n      tableData: []\n    }\n  },\n  created() {\n    this.load()\n    this.loading = true //数据加载则遮罩表格\n  },\n  methods: {\n    load() {\n      let studentId = this.$cookies.get(\"data\").studentId\n      request.get(\"/score/\"+studentId,{\n        params:{\n          pageNum:this.currentPage4,\n          pageSize:this.pageSize4,\n        }\n      }).then(res => {\n        console.log(res)\n        if(res.code == '0') {\n          this.tableData = res.data.records\n          this.total = res.data.total\n          this.loading = false //数据加载完成去掉遮罩\n          //\n          // this.score = res.data.records[0].etScore\n          // this.pagination = {...res.data.records[0]}\n          // let mapVal = this.score.map((element,index) => { //通过map得到 filter:[{text,value}]形式的数组对象\n          //   let newVal = {}\n          //   newVal.text = element.answerDate\n          //   newVal.value = element.answerDate\n          //   return newVal\n          // })\n          // let hash = []\n          // const newArr = mapVal.reduce((item, next) => { //对新对象进行去重操作\n          //   hash[next.text] ? '' : hash[next.text] = true && item.push(next);\n          //   return item\n          // }, []);\n          // this.filter = newArr\n        }\n      })\n    },\n    handleSizeChange(pageSize) {//改变当前每页的个数\n      this.pageSize4 = pageSize\n      this.load()\n    },\n    handleCurrentChange(pageNum) {//改变当前页码\n      this.currentPage4 = pageNum\n      this.load()\n    },\n    formatter(row, column) {\n      return row.address;\n    },\n    filterTag(value, row) {\n      return row.tag === value;\n    },\n    filterHandler(value, row, column) {\n      const property = column[\"property\"];\n      return row[property] === value;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pagination {\n  padding-top: 20px;\n}\n.table {\n  width: 980px;\n  margin: 0 auto;\n  .title {\n    margin: 20px;\n  }\n  .content-el {\n    background-color: #fff;\n    padding: 20px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}